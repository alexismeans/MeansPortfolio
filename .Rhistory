scale_x_continuous(breaks = date_breaks,
labels = date_labels,
limits = c(min(date_breaks), max(date_breaks))
)
#| warning: FALSE
ggplot(suitable, aes(x = Julian_Day, y = AveDE)) +
geom_point(aes(color = PVT), alpha = 0.6) +
geom_smooth(method = "loess", se = TRUE, color = "black") +
scale_color_viridis_d() +
labs(title = "Average DE Over Time",
x = "Julian Day",
y = "DE",
color = "PVT") +
theme_minimal() +
theme(legend.position = "right",
axis.text.x = element_text(angle = 0, hjust = 0.5)) +
scale_x_continuous(breaks = date_breaks,
labels = date_labels,
limits = c(min(date_breaks), max(date_breaks))
)
#| warning: FALSE
ggplot(suitable, aes(x = Julian_Day, y = AveDP)) +
geom_point(aes(color = PVT), alpha = 0.6) +
geom_smooth(method = "loess", se = TRUE, color = "black") +
scale_color_viridis_d() +
labs(title = "Average DP Over Time",
x = "Julian Day",
y = "DP",
color = "PVT") +
theme_minimal() +
theme(legend.position = "right",
axis.text.x = element_text(angle = 0, hjust = 0.5)) +
scale_x_continuous(
breaks = date_breaks,
labels = date_labels,
limits = c(min(date_breaks), max(date_breaks))
)
#| warning: FALSE
spp.map <- data %>%
select(TransectID, Code, Phenology, Part, Biomass, Duration, Status)
plot <- read.csv("C:/Users/Alexis Means/Documents/Project/Nutrition Sampling/R code/Cleaning/processed.data/transect.csv")
spp.map <- spp.map %>%
rename(PlotID = TransectID)
spp.map <- spp.map %>%
left_join(y = plot,
by = "PlotID",
relationship = "many-to-one")
spp.map <- spp.map %>%
rename(Lat = BeginLat,
Long = BeginLong,
Easting = BeginUTM_Easting,
Northing = BeginUTM_Northing) %>%
select(PlotID, Code, Phenology, Part, Biomass, Duration, Status, Julian_Day, Lat, Long, Easting, Northing)
# Create an sf object with the Lat and Long columns
spp.map_UTM <- st_as_sf(spp.map, coords = c("Long", "Lat"), crs = 4326)  # EPSG:4326 is WGS84
# Convert to UTM Zone 11N (EPSG:26911)
spp.map_UTM <- st_transform(spp.map_UTM, crs = 32611)
# Extract UTM coordinates (Easting and Northing)
spp.map$Easting <- st_coordinates(spp.map_UTM)[, 1]
spp.map$Northing <- st_coordinates(spp.map_UTM)[, 2]
#| warning: FALSE
# Load necessary libraries
library(tidyverse)
# Summarize biomass weight by spatial location and species status
spp.summary <- spp.map %>%
filter(!is.na(Biomass) & Biomass > 0)  # Remove NAs
ggplot(spp.summary, aes(x = Easting, y = Northing, weight = Biomass)) +
stat_density_2d(aes(fill = after_stat(density)), geom = "raster", contour = FALSE) +
facet_wrap(~ Status) +  # Separate maps for Native/Invasive
scale_fill_viridis_c(
name = "Biomass Density",
option = "turbo",
breaks = c(1e-09, 7e-09),  # Define specific density values
labels = c("Low", "High")  # Replace numerical values with "Low" and "High"
) +
labs(title = "Density of Biomass (Native vs Invasive Species)",
x = "Easting",
y = "Northing") +
theme_minimal() +
theme(axis.text = element_blank(),  # Remove tick labels
axis.ticks = element_blank())  # Rotate x-axis labels
#| warning: FALSE
month.sum <- spp.map %>%
filter(!is.na(Biomass) & Biomass > 0) %>%  # Remove NAs
mutate(Month = case_when(
Julian_Day >= 93 & Julian_Day < 124 ~ "April",
Julian_Day >= 124 & Julian_Day < 155 ~ "May",
Julian_Day >= 155 & Julian_Day < 185 ~ "June",
Julian_Day >= 185 & Julian_Day <= 212 ~ "July",
TRUE ~ NA_character_
)) %>%
filter(!is.na(Month)) %>%
mutate(Month = factor(Month, levels = c("April", "May", "June", "July")))
# Normalize biomass within each month (to make sample sizes comparable)
month.sum <- month.sum %>%
group_by(Month) %>%
mutate(Total_Biomass = sum(Biomass),  # Calculate total biomass for each month
Normalized_Biomass = Biomass / Total_Biomass) %>%  # Normalize biomass
ungroup()  # Remove grouping
# Create density plot faceted by Month and Status
ggplot(month.sum, aes(x = Easting, y = Northing, weight = Normalized_Biomass)) +
stat_density_2d(aes(fill = after_stat(density)), geom = "raster", contour = FALSE) +
facet_grid(Month ~ Status) +  # Grid facet by Month (rows) and Status (columns)
scale_fill_viridis_c(
name = "Biomass Density",
option = "turbo",
breaks = c(2e-09, 18e-09),  # Define specific density values
labels = c("Low", "High")  # Replace numerical values with "Low" and "High"
) +
labs(title = "Normalized Density of Biomass (Native vs Invasive Species by Month)",
x = "Easting",
y = "Northing") +
theme_minimal() +
theme(axis.text = element_blank(),  # Remove tick labels
axis.ticks = element_blank())
#| warning: FALSE
# Filter for observations with Species Code "BRTE"
cheat.sum <- spp.map %>%
filter(!is.na(Biomass) & Biomass > 0, Code == "BRTE") %>%  # Remove NAs and filter for "BRTE"
mutate(Month = case_when(
Julian_Day >= 93 & Julian_Day < 124 ~ "April",
Julian_Day >= 124 & Julian_Day < 155 ~ "May",
Julian_Day >= 155 & Julian_Day < 185 ~ "June",
Julian_Day >= 185 & Julian_Day <= 212 ~ "July",
TRUE ~ NA_character_
)) %>%
filter(!is.na(Month)) %>%
mutate(Month = factor(Month, levels = c("April", "May", "June", "July")))  # Set correct order
# Normalize biomass within each month (to make sample sizes comparable)
cheat.sum <- cheat.sum %>%
group_by(Month) %>%
mutate(Total_Biomass = sum(Biomass),  # Calculate total biomass for each month
Normalized_Biomass = Biomass / Total_Biomass) %>%  # Normalize biomass
ungroup()  # Remove grouping
# Create density plot faceted by Month and Status for species "BRTE"
ggplot(cheat.sum, aes(x = Easting, y = Northing, weight = Normalized_Biomass)) +
stat_density_2d(aes(fill = after_stat(density)), geom = "raster", contour = FALSE) +
facet_grid(Month ~ Code) +  # Grid facet by Month (rows) and Status (columns)
scale_fill_viridis_c(
name = "Biomass Density",
option = "turbo",
breaks = c(2e-09, 14e-09),  # Define specific density values
labels = c("Low ", "High ")  # Replace numerical values with "Low" and "High"
) +
labs(title = "Normalized Density of Biomass for BRTE by month",
x = "Easting",
y = "Northing") +
theme_minimal() +
theme(axis.text = element_blank(),  # Remove tick labels
axis.ticks = element_blank())
#| warning: FALSE
gps <- read.csv("C:/Users/Alexis Means/Documents/Project/Demographics/Code/cleaned.data/sheep_clean_24.csv")
gps <- gps %>%
rename(Easting = x_,
Northing = y_)
# Step 1: Kernel Density Estimation (KDE) for GPS data
gps_kde <- ggplot(gps, aes(x = Easting, y = Northing)) +
stat_density_2d(aes(fill = after_stat(density)), geom = "raster", contour = FALSE) +
scale_fill_viridis_c(option = "inferno",
name = "GPS Use Density",
breaks = c(2e-09, 10e-09),  # Define specific density values
labels = c("Low", "High")  # Replace  values with "Low" and "High"
) +
labs(title = "Sheep Area Use")+
theme_minimal()+
theme(axis.text = element_blank(),  # Remove tick labels
axis.ticks = element_blank())
plot(gps_kde)
#| warning: FALSE
month.sum <- spp.map %>%
filter(!is.na(Biomass) & Biomass > 0) %>%  # Remove NAs
mutate(Month = case_when(
Julian_Day >= 93 & Julian_Day < 124 ~ "April",
Julian_Day >= 124 & Julian_Day < 155 ~ "May",
Julian_Day >= 155 & Julian_Day < 185 ~ "June",
Julian_Day >= 185 & Julian_Day <= 212 ~ "July",
TRUE ~ NA_character_
)) %>%
filter(!is.na(Month)) %>%
mutate(Month = factor(Month, levels = c("April", "May", "June", "July")))
# Normalize biomass within each month (to make sample sizes comparable)
month.sum <- month.sum %>%
group_by(Month) %>%
mutate(Total_Biomass = sum(Biomass),  # Calculate total biomass for each month
Normalized_Biomass = Biomass / Total_Biomass) %>%  # Normalize biomass
ungroup()  # Remove grouping
# Extract month from the GPS timestamp
gps <- gps %>%
mutate(Month = case_when(
month(t_) == 4 ~ "April",
month(t_) == 5 ~ "May",
month(t_) == 6 ~ "June",
month(t_) == 7 ~ "July",
TRUE ~ NA_character_
)) %>%
filter(!is.na(Month)) %>%
mutate(Month = factor(Month, levels = c("April", "May", "June", "July")))
ggplot() + # Biomass density heatmap using kernel density estimation
stat_density_2d(
data = month.sum,
aes(x = Easting, y = Northing, weight = Normalized_Biomass, fill = after_stat(density)),
geom = "raster",
contour = FALSE
) +
facet_grid(Month ~ Status) +  # Grid facet by Month (rows) and Status (columns)
scale_fill_viridis_c(
name = "Biomass Density",
option = "turbo",
breaks = c(2e-09, 18e-09),  # Define specific density values
labels = c("Low", "High")  # Replace numerical values with "Low" and "High"
) +
labs(title = "Normalized Density of Biomass with GPS Locations (Native vs Invasive Species by Month)",
x = "Easting",
y = "Northing") +
theme_minimal() +
theme(axis.text = element_blank(),  # Remove tick labels
axis.ticks = element_blank()) +
# Overlay GPS points, filtering by Month to match the facet
geom_point(
data = gps,
aes(x = Easting, y = Northing),
color = "red", alpha = 0.1, size = 0.4
)
#| warning: FALSE
# Define the path to the directory containing the file
excelpath <- "C:/Users/Alexis Means/Documents/Project/Nutrition Sampling/R code/FRESH/processed.data/"
# Define the specific file name
filename <- "2024.subset.results.xlsx"
# Construct the full file path
excel.file <- file.path(excelpath, filename)
# Load the workbook and read the data
habitat <- loadWorkbook(excel.file)
suitable <- data.frame(readWorkbook(excel.file, sheet = "Plot-Level-Summary", startRow = 1, colNames = TRUE))
suitable.map <- suitable %>%
rename(PlotID = TransectID) %>%
left_join(y = plot,
by = "PlotID")
suitable.map <- suitable.map %>%
rename(Lat = BeginLat,
Long = BeginLong,
Easting = BeginUTM_Easting,
Northing = BeginUTM_Northing) %>%
select(PlotID, TotalDE, TotalDP, SuitableBiomass, AveDE, AveDP, Julian_Day, Lat, Long, Easting, Northing)
View(suitable.map)
# Create an sf object with the Lat and Long columns
suitable.map_UTM <- st_as_sf(suitable.map, coords = c("Long", "Lat"), crs = 4326)  # EPSG:4326 is WGS84
# Convert to UTM Zone 11N (EPSG:26911)
suitable.map_UTM <- st_transform(suitable.map_UTM, crs = 32611)
# Extract UTM coordinates (Easting and Northing)
suitable.map$Easting <- st_coordinates(suitable.map_UTM)[, 1]
suitable.map$Northing <- st_coordinates(suitable.map_UTM)[, 2]
#| warning: FALSE
suitable.summary <- suitable.map %>%
filter(!is.na(SuitableBiomass) & SuitableBiomass > 0)  # Remove NAs
ggplot(suitable.summary, aes(x = Easting, y = Northing, weight = SuitableBiomass)) +
stat_density_2d(aes(fill = after_stat(density)), geom = "raster", contour = FALSE) +
scale_fill_viridis_c(
name = "Suitable Biomass Density",
option = "turbo",
breaks = c(0.5e-09, 3.5e-09),  # Define specific density values
labels = c("Low", "High")  # Replace numerical values with "Low" and "High"
) +
labs(title = "Density of Suitable Biomass",
x = "Easting",
y = "Northing") +
theme_minimal() +
theme(axis.text = element_blank(),  # Remove tick labels
axis.ticks = element_blank())  # Rotate x-axis labels
#|warning: false
#| message: false
suitablemonth.sum <- suitable.map %>%
filter(!is.na(SuitableBiomass) & SuitableBiomass > 0) %>%
suppressWarnings(
mutate(Month = case_when(
Julian_Day >= 93 & Julian_Day < 124 ~ "April",
Julian_Day >= 124 & Julian_Day < 155 ~ "May",
Julian_Day >= 155 & Julian_Day < 185 ~ "June",
Julian_Day >= 185 & Julian_Day <= 212 ~ "July",
TRUE ~ NA_character_
))
) %>%
filter(!is.na(Month)) %>%
mutate(Month = factor(Month, levels = c("April", "May", "June", "July")))
#|warning: false
#| message: false
suitablemonth.sum <- suitable.map %>%
filter(!is.na(SuitableBiomass) & SuitableBiomass > 0) %>%
mutate(Month = case_when(
Julian_Day >= 93 & Julian_Day < 124 ~ "April",
Julian_Day >= 124 & Julian_Day < 155 ~ "May",
Julian_Day >= 155 & Julian_Day < 185 ~ "June",
Julian_Day >= 185 & Julian_Day <= 212 ~ "July",
TRUE ~ NA_character_
)) %>%
filter(!is.na(Month)) %>%
mutate(Month = factor(Month, levels = c("April", "May", "June", "July")))
# Normalize biomass within each month (to make sample sizes comparable)
suitablemonth.sum <- suitablemonth.sum %>%
group_by(Month) %>%
mutate(Total_SuitableBiomass = sum(SuitableBiomass),  # Calculate total biomass for each month
Normalized_SuitableBiomass = SuitableBiomass / Total_SuitableBiomass) %>%  # Normalize biomass
ungroup()  # Remove grouping
# Create density plot faceted by Month and Status
ggplot(suitablemonth.sum, aes(x = Easting, y = Northing, weight = Normalized_SuitableBiomass)) +
stat_density_2d(aes(fill = after_stat(density)), geom = "raster", contour = FALSE) +
facet_grid("Month") +  # Grid facet by Month (rows) and Status (columns)
scale_fill_viridis_c(
name = "Suitable Biomass Density",
option = "turbo",
breaks = c(1e-09, 9e-09),  # Define specific density values
labels = c("Low ", "High ")  # Replace numerical values with "Low" and "High"
) +
labs(title = "Normalized Density of Suitable Biomass",
x = "Easting",
y = "Northing") +
theme_minimal() +
theme(axis.text = element_blank(),  # Remove tick labels
axis.ticks = element_blank())
#| warning: FALSE
library(lpSolve)
library(openxlsx)
library(tools)
library(dplyr)
library(sf)
library(tidyverse)
# Define the path to the directory containing the file
excelpath <- "C:/Users/Alexis Means/Documents/Project/Nutrition Sampling/R code/FRESH/processed.data/"
# Define the specific file name
filename <- "FRESH.Subset.xlsx"
# Construct the full file path
excel.file <- file.path(excelpath, filename)
# Load the workbook and read the data
library(openxlsx)
habitat <- loadWorkbook(excel.file)
data <- data.frame(readWorkbook(excel.file, sheet = "FRESH Data", startRow = 1, colNames = TRUE))
plant <-read.csv("C:/Users/Alexis Means/Documents/Project/Nutrition Sampling/R code/Cleaning/processed.data/plant.csv")
data <- data %>%
rename(Code = Plant.Code) %>%
left_join(y = plant,
by = "Code",
relationship = "many-to-one")
data
#| warning: FALSE
library(tidyverse)
data$Phenology <- factor(data$Phenology, levels = c("N", "B", "FL", "FR", "M", "C"))
ggplot(data, aes(x = DP, y = DE)) +
geom_point(color = "blue", alpha = 0.6) +
geom_smooth(method = "lm", se = TRUE, color = "red") +
labs(title = "Relationship Between DE and DP by Phenology",
x = "Digestible Protein (DP)",
y = "Digestible Energy (DE)") +
theme_minimal() +
facet_wrap(~ Phenology, scales = "free") +
scale_x_continuous(expand = c(0.05, 0)) +
scale_y_continuous(expand = c(0.05, 0)) +
theme(strip.text = element_text(face = "bold"))
#| warning: FALSE
# Ensure Phenology is a factor with the correct order
data$Phenology <- factor(data$Phenology, levels = c("N", "B", "FL", "FR", "M", "C"))
ggplot(data, aes(x = Phenology, y = DE, fill = Phenology)) +
geom_boxplot(alpha = 0.7, outlier.shape = NA) +
scale_fill_viridis_d(option = "plasma") +
labs(title = "Distribution of Digestible Energy (DE) by Phenology",
x = "Phenology",
y = "DE(kJ g^-1)") +
theme_minimal() +
theme(legend.position = "none")+
geom_hline(yintercept = 11.5, linetype = "dashed", color = "red", size = 1)+
annotate("text", x = 6.4, y = 11.8, label = "11.5", color = "black", size = 4, fontface = "italic")
#| warning: FALSE
ggplot(data, aes(x = Phenology, y = DP, fill = Phenology)) +
geom_boxplot(alpha = 0.7, outlier.shape = NA) +
scale_fill_viridis_d(option = "plasma") +
labs(title = "Distribution of Digestible Protien (DP) by Phenology",
x = "Phenology",
y = "DP (g protien/100g forage)") +
theme_minimal() +
theme(legend.position = "none")+
geom_hline(yintercept = 7.5, linetype = "dashed", color = "red", size = 1)+
annotate("text", x = 6.5, y = 8, label = "7.5", color = "black", size = 4, fontface = "italic")+
coord_cartesian(ylim = c(-2, 12))
#| warning: FALSE
data <- data %>%
mutate(PVT = str_sub(TransectID, start = 4, end = 6)) %>%
group_by(PVT) %>%
mutate(Stand_DE = scale(DE)) %>%
mutate(Stand_DP = scale(DP)) %>%
ungroup()
data <- data %>%
mutate(PVT = case_when(
PVT == "672" ~ "Grassland",
PVT == "682" ~ "Riparian",
PVT == "674" ~ "Intermediate",
PVT == "668" ~ "Scabland",
PVT == "669" ~ "Shrubland",
TRUE ~ as.character(PVT)  # This keeps any other values unchanged
))
ggplot(data, aes(x = PVT, y = DE, fill = PVT)) +
geom_boxplot(alpha = 0.7, outlier.shape = NA) +
scale_fill_viridis_d(option = "plasma") +
labs(title = "Distribution of Digestible Energy (DE) by Phenology and PVT",
x = NULL,  # Remove x-axis label
y = "DE (kJ g^-1)",
fill = "PVT") +  # Label for the legend
theme_minimal() +
theme(
legend.position = "right",  # Show legend on the right
axis.text.x = element_blank(),  # Remove x-axis text
axis.ticks.x = element_blank()  # Remove x-axis ticks
) +
geom_hline(yintercept = 11.5, linetype = "dashed", color = "red", size = 1) +
facet_wrap(~ Phenology, scales = "free_x", ncol = 3) +
coord_cartesian(ylim = c(8, 15))
ggplot(data, aes(x = PVT, y = DP, fill = PVT)) +
geom_boxplot(alpha = 0.7, outlier.shape = NA) +
scale_fill_viridis_d(option = "plasma") +
labs(title = "Distribution of Digestible Protein (DP) by Phenology and PVT",
x = NULL,  # Remove x-axis label
y = "DP (g protein/100 g forage)",
fill = "PVT") +  # Label for the legend
theme_minimal() +
theme(legend.position = "right",  # Show legend on the right
axis.text.x = element_blank(),  # Remove x-axis text
axis.ticks.x = element_blank(),
strip.text = element_text(face = "bold")# Remove x-axis ticks
) +
geom_hline(yintercept = 7.5, linetype = "dashed", color = "red", size = 1) +
facet_wrap(~ Phenology, scales = "free_x", ncol = 3)+
coord_cartesian(ylim = c(-2, 12))
#| warning: FALSE
plot <- read.csv("C:/Users/Alexis Means/Documents/Project/Nutrition Sampling/R code/Cleaning/processed.data/transect.csv")
# Define the path to the directory containing the file
excelpath <- "C:/Users/Alexis Means/Documents/Project/Nutrition Sampling/R code/FRESH/processed.data/"
# Define the specific file name
filename <- "2024.subset.results.xlsx"
# Construct the full file path
excel.file <- file.path(excelpath, filename)
# Load the workbook and read the data
habitat <- loadWorkbook(excel.file)
suitable <- data.frame(readWorkbook(excel.file, sheet = "Plot-Level-Summary", startRow = 1, colNames = TRUE))
suitable <- suitable %>%
rename(PlotID = TransectID) %>%
left_join(y = plot,
by = "PlotID")
suitable <- suitable %>%
rename(Lat = BeginLat,
Long = BeginLong,
Easting = BeginUTM_Easting,
Northing = BeginUTM_Northing) %>%
select(PlotID, TotalDE, TotalDP, SuitableBiomass, AveDE, AveDP, Julian_Day, Lat, Long, Easting, Northing)
# Create an sf object with the Lat and Long columns
suitable_UTM <- st_as_sf(suitable, coords = c("Long", "Lat"), crs = 4326)  # EPSG:4326 is WGS84
# Convert to UTM Zone 11N (EPSG:26911)
suitable_UTM <- st_transform(suitable_UTM, crs = 32611)
# Extract UTM coordinates (Easting and Northing)
suitable$Easting <- st_coordinates(suitable_UTM)[, 1]
suitable$Northing <- st_coordinates(suitable_UTM)[, 2]
suitable <- suitable %>%
mutate(Month = case_when(
Julian_Day >= 93 & Julian_Day < 124 ~ "April",
Julian_Day >= 124 & Julian_Day < 155 ~ "May",
Julian_Day >= 155 & Julian_Day < 185 ~ "June",
Julian_Day >= 185 & Julian_Day <= 212 ~ "July",
TRUE ~ NA_character_
)) %>%
filter(!is.na(Month)) %>%
mutate(Month = factor(Month, levels = c("April", "May", "June", "July")))
suitable <- suitable %>%
mutate(PVT = str_sub(PlotID, start = 4, end = 6)) %>%
mutate(PVT = case_when(
PVT == "672" ~ "Grassland",
PVT == "682" ~ "Riparian",
PVT == "674" ~ "Intermediate",
PVT == "668" ~ "Scabland",
PVT == "669" ~ "Shrubland",
TRUE ~ as.character(PVT)  # This keeps any other values unchanged
))
plot
suitable
#| warning: FALSE
ggplot(suitable, aes(x = PVT, y = SuitableBiomass, fill = PVT)) +
geom_boxplot(alpha = 0.7, outlier.shape = NA) +
scale_fill_viridis_d(option = "plasma") +
labs(title = "Comparison of Suitable Biomass Across PVTs",
x = "Plant Vegetation Type (PVT)",
y = "Suitable Biomass") +
theme_minimal() +
theme(legend.position = "none",
axis.text.x = element_text(angle = 45, hjust = 1))+
coord_cartesian(ylim = c(-2, 170))
#| warning: FALSE
# Define the Julian days and corresponding month labels
date_breaks <- c(92, 122, 155, 185)
date_labels <- c("April", "May", "June", "July")
ggplot(suitable, aes(x = Julian_Day, y = SuitableBiomass)) +
geom_point(aes(color = PVT), alpha = 0.6) +
geom_smooth(method = "loess", se = TRUE, color = "black") +
scale_color_viridis_d() +
labs(title = "Suitable Biomass Over Time",
x = "Julian Day",
y = "Suitable Biomass",
color = "PVT") +
theme_minimal() +
theme(legend.position = "right",
axis.text.x = element_text(angle = 0, hjust = 0.5)) +
scale_x_continuous(breaks = date_breaks,
labels = date_labels,
limits = c(min(date_breaks), max(date_breaks))
)
#| echo: TRUE
table<- read.csv("C:/Users/Alexis Means/Documents/School/BCB520/2A/attributes.csv")
knitr::kable(table)
