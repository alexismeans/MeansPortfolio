x = "Month",
y = "Proportion",
fill = "Status"
) +
theme_minimal()
---
title: "John Day Vegetation Recap"
df %>%
count(Month, Status) %>%
group_by(Month) %>%
mutate(prop = n / sum(n)) %>%
ggplot(aes(x = Month, y = prop, fill = Status)) +
geom_area(alpha = 0.8, color = "white", size = 0.3) +
scale_y_continuous(labels = scales::percent) +
labs(
x = "Month",
y = "Proportion",
fill = "Status"
) +
theme_minimal()
df %>%
count(Month, Status) %>%
group_by(Month) %>%
mutate(prop = n / sum(n)) %>%
ggplot(aes(x = Month, y = prop, fill = Status)) +
geom_area(alpha = 0.8, color = "white", size = 0.3) +
scale_y_continuous(labels = scales::percent) +
labs(
x = "Month",
y = "Proportion",
fill = "Status"
) +
theme_minimal()
df %>%
count(Month, Status) %>%
group_by(Month) %>%
mutate(prop = n / sum(n)) %>%
ggplot(aes(x = Month, y = Status, fill = prop)) +
geom_tile(color = "white") +
scale_fill_viridis_c(labels = scales::percent) +
labs(
x = "Month",
y = "Status",
fill = "Proportion"
) +
theme_minimal()
status <- plant %>%
select(Spp, Status, FunctionalGroup, FG_New)
df <- comp %>%
left_join(status, by = "Spp")
df <- df %>%
mutate(Pheno = na_if(Status, "NA")) %>%
filter(!is.na(Status))
df %>%
count(Month, Status) %>%
group_by(Month) %>%
mutate(prop = n / sum(n)) %>%
ggplot(aes(x = Month, y = prop, fill = Status)) +
geom_col(position = "dodge") +
scale_y_continuous(labels = scales::percent) +
labs(
x = "Month",
y = "Proportion",
fill = "Status"
) +
theme_minimal()
df %>%
count(PVT, Status) %>%
group_by(PVT) %>%
mutate(prop = n / sum(n)) %>%
ggplot(aes(x = PVT, y = prop, fill = Status)) +
geom_col(position = "dodge") +
scale_y_continuous(labels = scales::percent) +
labs(
title = "Composition of PVTs",
x = "PVT",
y = "Proportion",
fill = "Status"
) +
theme_minimal()
status <- plant %>%
select(Spp, Status, FunctionalGroup, FG_New)
df <- comp %>%
left_join(status, by = "Spp")
df <- df %>%
mutate(Pheno = na_if(Status, "NA")) %>%
filter(!is.na(Status))
df %>%
count(Month, Status) %>%
group_by(Month) %>%
mutate(prop = n / sum(n)) %>%
ggplot(aes(x = Month, y = prop, fill = Status)) +
geom_col(position = "dodge") +
scale_y_continuous(labels = scales::percent) +
labs(
title = "Composition based on Month",
x = "Month",
y = "Proportion",
fill = "Status"
) +
theme_minimal()
df %>%
count(PVT, Status) %>%
group_by(PVT) %>%
mutate(prop = n / sum(n)) %>%
ggplot(aes(x = PVT, y = prop, fill = Status)) +
geom_col(position = "dodge") +
scale_y_continuous(labels = scales::percent) +
labs(
title = "Composition based on PVTs",
x = "PVT",
y = "Proportion",
fill = "Status"
) +
theme_minimal()
status <- plant %>%
select(Spp, Status, FunctionalGroup, FG_New)
df <- comp %>%
left_join(status, by = "Spp")
df <- df %>%
mutate(Pheno = na_if(Status, "NA")) %>%
filter(!is.na(Status)) %>%
mutate(PVT = dplyr::recode(PVT,
`672` = "Grassland",
`682` = "Riparian",
`668` = "Scabland",
`669` = "Shrubland",
`674` = "Intermediate",
`660` = "Sparse"))
df %>%
count(Month, Status) %>%
group_by(Month) %>%
mutate(prop = n / sum(n)) %>%
ggplot(aes(x = Month, y = prop, fill = Status)) +
geom_col(position = "dodge") +
scale_y_continuous(labels = scales::percent) +
labs(
title = "Composition based on Month",
x = "Month",
y = "Proportion",
fill = "Status"
) +
theme_minimal()
df %>%
count(PVT, Status) %>%
group_by(PVT) %>%
mutate(prop = n / sum(n)) %>%
ggplot(aes(x = PVT, y = prop, fill = Status)) +
geom_col(position = "dodge") +
scale_y_continuous(labels = scales::percent) +
labs(
title = "Composition based on PVTs",
x = "PVT",
y = "Proportion",
fill = "Status"
) +
theme_minimal()
#| warning: FALSE
f <- "C:/Users/Alexis Means/Documents/Project/Nutrition Sampling/VegDatabases/Fecal.xlsx"
fecal <- read_excel(f, "Sheet1")
fecal <- fecal %>%
filter(!ID %in% c("25_045", "25_061")) %>%
mutate(
DATE = as.Date(
suppressWarnings(as.numeric(DATE)),  # convert Excel numbers to Date
origin = "1899-12-30"                # Excel date origin
)
) %>%
filter(!is.na(DATE)) %>%        # remove rows where DATE is NA
distinct(DATE, .keep_all = TRUE) %>%  # keep only one row per DATE
mutate(
DOY  = yday(DATE),
Year = factor(year(DATE))
)
ggplot(fecal, aes(x = DOY, y = Year, color = Year)) +
geom_jitter(height = 0.2, size = 3) +   # jitter vertically within each Year
scale_x_continuous(
breaks = c(15, 75, 105, 136, 166, 197, 228),
labels = c("Jan", "March", "Apr", "May", "June", "July", "Aug")
) +
labs(
title = "Sampling Dates by Year",
x = "Month",
y = "Year",
color = "Year"
) +
theme_bw()
#| warning: FALSE
f <- "C:/Users/Alexis Means/Documents/Project/Nutrition Sampling/VegDatabases/Fecal.xlsx"
fecal <- read_excel(f, "Sheet1")
fecal <- fecal %>%
filter(!ID %in% c("25_045", "25_061")) %>%
mutate(
DATE = as.Date(
suppressWarnings(as.numeric(DATE)),  # convert Excel numbers to Date
origin = "1899-12-30"                # Excel date origin
)
) %>%
filter(!is.na(DATE)) %>%        # remove rows where DATE is NA
distinct(DATE, .keep_all = TRUE) %>%  # keep only one row per DATE
mutate(
DOY  = yday(DATE),
Year = factor(year(DATE))
)
ggplot(fecal, aes(x = DOY, y = Year, color = Year)) +
geom_jitter(height = 0.2, size = 3) +   # jitter vertically within each Year
scale_x_continuous(
breaks = c(20, 45, 75, 105, 136, 166, 197, 228),
labels = c("Jan","Feb", "March", "Apr", "May", "June", "July", "Aug")
) +
labs(
title = "Sampling Dates by Year",
x = "Month",
y = "Year",
color = "Year"
) +
theme_bw()
#| warning: FALSE
f <- "C:/Users/Alexis Means/Documents/Project/Nutrition Sampling/VegDatabases/Fecal.xlsx"
fecal <- read_excel(f, "Sheet1")
fecal <- fecal %>%
filter(!ID %in% c("25_045", "25_061")) %>%
mutate(
DATE = as.Date(
suppressWarnings(as.numeric(DATE)),  # convert Excel numbers to Date
origin = "1899-12-30"                # Excel date origin
)
) %>%
filter(!is.na(DATE)) %>%        # remove rows where DATE is NA
distinct(DATE, .keep_all = TRUE) %>%  # keep only one row per DATE
mutate(
DOY  = yday(DATE),
Year = factor(year(DATE))
)
ggplot(fecal, aes(x = DOY, y = Year, color = Year)) +
geom_jitter(height = 0.2, size = 3) +   # jitter vertically within each Year
scale_x_continuous(
breaks = c(1, 32, 75, 105, 136, 166, 197, 228),
labels = c("Jan","Feb", "March", "Apr", "May", "June", "July", "Aug")
) +
labs(
title = "Sampling Dates by Year",
x = "Month",
y = "Year",
color = "Year"
) +
theme_bw()
#| warning: FALSE
f <- "C:/Users/Alexis Means/Documents/Project/Nutrition Sampling/VegDatabases/Fecal.xlsx"
fecal <- read_excel(f, "Sheet1")
fecal <- fecal %>%
filter(!ID %in% c("25_045", "25_061")) %>%
mutate(
DATE = as.Date(
suppressWarnings(as.numeric(DATE)),  # convert Excel numbers to Date
origin = "1899-12-30"                # Excel date origin
)
) %>%
filter(!is.na(DATE)) %>%        # remove rows where DATE is NA
distinct(DATE, .keep_all = TRUE) %>%  # keep only one row per DATE
mutate(
DOY  = yday(DATE),
Year = factor(year(DATE))
)
ggplot(fecal, aes(x = DOY, y = Year, color = Year)) +
geom_jitter(height = 0.2, size = 3) +   # jitter vertically within each Year
scale_x_continuous(
breaks = c(1, 32, 75, 105, 136, 166, 197, 228),
labels = c("Jan", "Feb", "March", "Apr", "May", "June", "July", "Aug")
) +
labs(
title = "Sampling Dates by Year",
x = "Month",
y = "Year",
color = "Year"
) +
theme_bw()
#| warning: FALSE
f <- "C:/Users/Alexis Means/Documents/Project/Nutrition Sampling/VegDatabases/Fecal.xlsx"
fecal <- read_excel(f, "Sheet1")
fecal <- fecal %>%
filter(!ID %in% c("25_045", "25_061")) %>%
mutate(
DATE = as.Date(
suppressWarnings(as.numeric(DATE)),  # convert Excel numbers to Date
origin = "1899-12-30"                # Excel date origin
)
) %>%
filter(!is.na(DATE)) %>%        # remove rows where DATE is NA
distinct(DATE, .keep_all = TRUE) %>%  # keep only one row per DATE
mutate(
DOY  = yday(DATE),
Year = factor(year(DATE))
)
ggplot(fecal, aes(x = DOY, y = Year, color = Year)) +
geom_jitter(height = 0.2, size = 3) +   # jitter vertically within each Year
scale_x_continuous(
breaks = c(1, 32, 61, 92, 122, 153, 183, 213),
labels = c("Jan", "Feb", "March", "Apr", "May", "June", "July", "Aug")
) +
labs(
title = "Sampling Dates by Year",
x = "Month",
y = "Year",
color = "Year"
) +
theme_bw()
river <- st_read("C:/Users/Alexis Means/Documents/Project/JohnDayRiver_shp/JohnDayRiver.shp")
jd <- st_read("C:/Users/Alexis Means/Documents/Project/Nutrition Sampling/2025_GRTS/25_StudyArea/25_LJD_StudyArea_all.shp")
#plot without map in background
ggplot(transect, aes(x = easting, y = northing, color = PVT))+
geom_point(size = 2, alpha = 0.8)+
scale_color_manual (values = c(
"Grassland" = "green",
"Riparian" = "blue",
"Sparse" = "brown",
"Intermediate" = "yellow",
"Scabland" = "purple",
"Shrubland" = "red"
))+
labs(title = "Sample locations within the John Day",
x = "Easting",
y = "Northing",
color = "Vegetation Type")+
theme_minimal()+
theme(legend.position = "right")
crs(river)
crs(river)
View(jd)
st_crs(river)
st_crs(jd)
jd <- st_transform(jd, st_crs(utm))
river <- st_transform(river, st_crs(utm))
ggplot() +
# John Day boundary outline only
geom_sf(data = jd, fill = NA, color = "black", size = 0.6) +
# River shapefile
geom_sf(data = river, color = "blue", size = 0.8) +
# Transect points
geom_sf(data = utm, aes(color = PVT), size = 2, alpha = 0.8) +
# Color scheme
scale_color_manual(values = c(
"Grassland" = "green",
"Riparian" = "blue",
"Sparse" = "brown",
"Intermediate" = "yellow",
"Scabland" = "purple",
"Shrubland" = "red"
)) +
# Labels and theme
labs(
title = "Sample Locations within the John Day",
x = "Easting",
y = "Northing",
color = "Vegetation Type"
) +
theme_minimal() +
theme(legend.position = "right")
ggplot() +
# John Day boundary outline only
geom_sf(data = jd, fill = NA, color = "black", size = 0.6) +
# River shapefile
geom_sf(data = river, color = "blue", size = 0.8) +
# Transect points
geom_sf(data = transect, aes(color = PVT), size = 2, alpha = 0.8) +
# Color scheme
scale_color_manual(values = c(
"Grassland" = "green",
"Riparian" = "blue",
"Sparse" = "brown",
"Intermediate" = "yellow",
"Scabland" = "purple",
"Shrubland" = "red"
)) +
# Labels and theme
labs(
title = "Sample Locations within the John Day",
x = "Easting",
y = "Northing",
color = "Vegetation Type"
) +
theme_minimal() +
theme(legend.position = "right")
jd <- st_transform(jd, crs = 32610)
river <- st_transform(river, crs = 32610)
ggplot() +
# John Day boundary (outline only)
geom_sf(data = jd, fill = NA, color = "black", size = 0.6) +
# River shapefile
geom_sf(data = river, color = "blue", size = 0.8) +
# Transect points from your dataframe
geom_point(
data = transect,
aes(x = easting, y = northing, color = PVT),
size = 2,
alpha = 0.8
) +
# Color scheme
scale_color_manual(values = c(
"Grassland" = "green",
"Riparian" = "blue",
"Sparse" = "brown",
"Intermediate" = "yellow",
"Scabland" = "purple",
"Shrubland" = "red"
)) +
# Labels and theme
labs(
title = "Sample Locations within the John Day",
x = "Easting",
y = "Northing",
color = "Vegetation Type"
) +
theme_minimal() +
theme(legend.position = "right")
jd <- st_transform(st_zm(jd), crs = 32610)
river <- st_transform(st_zm(river), crs = 32610)
river <- st_read("C:/Users/Alexis Means/Documents/Project/JohnDayRiver_shp/JohnDayRiver.shp")
jd <- st_read("C:/Users/Alexis Means/Documents/Project/Nutrition Sampling/2025_GRTS/25_StudyArea/25_LJD_StudyArea_all.shp")
jd <- st_transform(st_zm(jd), crs = 32610)
river <- st_transform(st_zm(river), crs = 32610)
ggplot() +
# John Day boundary (outline only)
geom_sf(data = jd, fill = NA, color = "black", size = 0.6) +
# River shapefile
geom_sf(data = river, color = "blue", size = 0.8) +
# Transect points from your dataframe
geom_point(
data = transect,
aes(x = easting, y = northing, color = PVT),
size = 2,
alpha = 0.8
) +
# Color scheme
scale_color_manual(values = c(
"Grassland" = "green",
"Riparian" = "blue",
"Sparse" = "brown",
"Intermediate" = "yellow",
"Scabland" = "purple",
"Shrubland" = "red"
)) +
# Labels and theme
labs(
title = "Sample Locations within the John Day",
x = "Easting",
y = "Northing",
color = "Vegetation Type"
) +
theme_minimal() +
theme(legend.position = "right")
river <- st_intersection(river, jd)
ggplot() +
# John Day boundary (outline only)
geom_sf(data = jd, fill = NA, color = "black", size = 0.6) +
# River shapefile
geom_sf(data = river, color = "blue", size = 0.8) +
# Transect points from your dataframe
geom_point(
data = transect,
aes(x = easting, y = northing, color = PVT),
size = 2,
alpha = 0.8
) +
# Color scheme
scale_color_manual(values = c(
"Grassland" = "green",
"Riparian" = "blue",
"Sparse" = "brown",
"Intermediate" = "yellow",
"Scabland" = "purple",
"Shrubland" = "red"
)) +
# Labels and theme
labs(
title = "Sample Locations within the John Day",
x = "Easting",
y = "Northing",
color = "Vegetation Type"
) +
theme_minimal() +
theme(legend.position = "right")
ggplot() +
# John Day boundary (outline only)
geom_sf(data = jd, fill = NA, color = "black", size = 0.6) +
# River shapefile
geom_sf(data = river, color = "blue", size = 0.8) +
# Transect points from your dataframe
geom_point(
data = transect,
aes(x = easting, y = northing, color = PVT),
size = 2,
alpha = 0.8
) +
# Color scheme
scale_color_manual(values = c(
"Grassland" = "green",
"Riparian" = "blue",
"Sparse" = "brown",
"Intermediate" = "yellow",
"Scabland" = "purple",
"Shrubland" = "red"
)) +
# Labels and theme
labs(
title = "Sample Locations within the John Day",
x = "Easting",
y = "Northing",
color = "Vegetation Type"
) +
theme_minimal() +
theme(legend.position = "right")
