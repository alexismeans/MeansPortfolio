pvt_comp <- summary_df %>%
pivot_wider(
names_from = PVT,
values_from = c(DE_mean, DP_mean)
)
ggplot(summary_df, aes(x = Season, y = DE_mean, fill = Season)) +
geom_boxplot() +
facet_grid(Part + Pheno ~ PVT) +
theme_minimal()
View(season_comp)
View(pvt_comp)
quality <- read.csv("C:/Users/Alexis Means/Documents/Project/Nutrition Sampling/R code/FRESH/processed.data/4.24.25_cleaned_quality.csv")
totalquality <- read.csv("C:/Users/Alexis Means/Documents/Project/Nutrition Sampling/R code/FRESH/raw.data/totalquality.csv")
plant <- read.csv("C:/Users/Alexis Means/Documents/Project/Nutrition Sampling/R code/Cleaning/processed.data/plant.csv")
plant <- plant %>%
select(-Spp, -CommonName, -Duration) %>%
rename(Spp = Code) %>%
select(Spp, Family, Genus, FG_New, Status)
totalquality <- totalquality %>%
rename(UniqueID = ID) %>%
select(Date, Transect, UniqueID)
d <- quality %>%
left_join(y = totalquality,
by = "UniqueID") %>%
select(Date, Transect, Sample_ID, PVT, Spp, Pheno, Part, Description, DP, DE) %>%
distinct(Sample_ID, .keep_all = TRUE) %>%
left_join(y = plant,
by = "Spp") %>%
mutate(Date = mdy(Date)) %>%
mutate(Season = if_else(Date < ymd("2024-06-01"), "SP", "SU")) %>%
select(-Date) %>%
mutate(Description = paste0(Description, "_", Season))
d <- d %>%
filter(DE != "#VALUE!", DP != "#VALUE!")
d <- d %>%
mutate(
DE = as.numeric(DE),
DP = as.numeric(DP),
PVT = as.factor(PVT),
Season = as.factor(Season),
Spp = as.factor(Spp),
Pheno = as.factor(Pheno),
Part = as.factor(Part)
) %>%
d$Pheno <- factor(data$Pheno, levels = c("N", "B", "FL", "FR", "M", "C"))
d <- d %>%
mutate(
DE = as.numeric(DE),
DP = as.numeric(DP),
PVT = as.factor(PVT),
Season = as.factor(Season),
Spp = as.factor(Spp),
Pheno = as.factor(Pheno),
Part = as.factor(Part)
)
d <- d %>%
d$Pheno <- factor(data$Pheno, levels = c("N", "B", "FL", "FR", "M", "C"))
d <- d %>%
mutate(
Pheno = factor(Pheno, levels = c("N", "B", "FL", "FR", "M", "C"))
)
summary_df <- d %>%
group_by(PVT, Spp, Pheno, Part, Season) %>%
summarise(
DE_mean = mean(DE, na.rm = TRUE),
DP_mean = mean(DP, na.rm = TRUE),
n = n(),
.groups = "drop"
)
season_comp <- summary_df %>%
pivot_wider(
names_from = Season,
values_from = c(DE_mean, DP_mean)
) %>%
mutate(
DE_diff = DE_mean_SU - DE_mean_SP,
DP_diff = DP_mean_SU - DP_mean_SP
)
pvt_comp <- summary_df %>%
pivot_wider(
names_from = PVT,
values_from = c(DE_mean, DP_mean)
)
ggplot(summary_df, aes(x = Season, y = DE_mean, fill = Season)) +
geom_boxplot() +
facet_grid(Part + Pheno ~ PVT) +
theme_minimal()
ggplot(season_comp, aes(x = Season, y = DE_mean, group = interaction(PVT, Spp, Pheno, Part))) +
geom_line(aes(color = PVT), alpha = 0.5) +
geom_point(aes(color = PVT)) +
facet_grid(Part ~ Pheno) +
labs(title = "Seasonal Change in DE by PVT",
y = "Mean DE", x = "Season") +
theme_minimal()
ggplot(pvt_comp, aes(x = PVT, y = DE_mean, fill = PVT)) +
geom_boxplot() +
facet_grid(Part ~ Season) +
labs(title = "PVT Comparison of DE within Season",
y = "Mean DE", x = "PVT") +
theme_minimal()
ggplot(summary_df, aes(x = Season, y = DE_mean, group = interaction(PVT, Spp, Pheno, Part))) +
geom_line(aes(color = PVT), alpha = 0.5) +
geom_point(aes(color = PVT)) +
facet_grid(Part ~ Pheno) +
labs(title = "Seasonal Change in DE by PVT",
y = "Mean DE", x = "Season") +
theme_minimal()
ggplot(summary_df, aes(x = PVT, y = DE_mean, fill = PVT)) +
geom_boxplot() +
facet_grid(Part ~ Season) +
labs(title = "PVT Comparison of DE within Season",
y = "Mean DE", x = "PVT") +
theme_minimal()
ggplot(summary_df, aes(x = Season, y = DE_mean, group = interaction(PVT, Spp, Pheno, Part))) +
geom_line(aes(color = Spp), alpha = 0.7) +
geom_point(aes(color = Spp)) +
facet_grid(Part ~ Pheno) +
labs(title = "Seasonal Change in DE by Species",
y = "Mean DE", x = "Season") +
theme_minimal()
View(summary_df)
brte_fl <- data %>%
filter(Code == "BRTE", Phenology == "FL") %>%
mutate(
Season = factor(Season, levels = c("SP", "SU")),
PVT = as.factor(PVT)
)
brte_fl <- d %>%
filter(Code == "BRTE", Phenology == "FL") %>%
mutate(
Season = factor(Season, levels = c("SP", "SU")),
PVT = as.factor(PVT)
)
brte_fl <- d %>%
filter(Spp == "BRTE", Phenology == "FL") %>%
mutate(
Season = factor(Season, levels = c("SP", "SU")),
PVT = as.factor(PVT)
)
brte_fl <- d %>%
filter(Spp == "BRTE", Pheno == "FL") %>%
mutate(
Season = factor(Season, levels = c("SP", "SU")),
PVT = as.factor(PVT)
)
ggplot(brte_fl, aes(x = PVT, y = DE_mean, fill = Season)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "BRTE DE by PVT and Season (FL)", y = "Mean DE", x = "PVT") +
theme_minimal()
ggplot(brte_fl, aes(x = PVT, y = DE, fill = Season)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "BRTE DE by PVT and Season (FL)", y = "Mean DE", x = "PVT") +
theme_minimal()
gggplot(brte_fl, aes(x = PVT, y = DE, color = Season)) +
geom_jitter(width = 0.2, height = 0, size = 2, alpha = 0.7) +
labs(title = "BRTE DE by PVT and Season (FL)",
y = "DE",
x = "PVT") +
theme_minimal()
library(ggplot2)
gggplot(brte_fl, aes(x = PVT, y = DE, color = Season)) +
geom_jitter(width = 0.2, height = 0, size = 2, alpha = 0.7) +
labs(title = "BRTE DE by PVT and Season (FL)",
y = "DE",
x = "PVT") +
theme_minimal()
ggplot(brte_fl, aes(x = PVT, y = DE, color = Season)) +
geom_jitter(width = 0.2, height = 0, size = 2, alpha = 0.7) +
labs(title = "BRTE DE by PVT and Season (FL)",
y = "DE",
x = "PVT") +
theme_minimal()
ggplot(brte_fl, aes(x = PVT, y = DP, color = Season)) +
geom_jitter(width = 0.2, height = 0, size = 2, alpha = 0.7) +
labs(title = "BRTE DP by PVT and Season (FL)",
y = "DP",
x = "PVT") +
theme_minimal()
ggplot(brte_fl, aes(x = PVT, y = DE, color = Season)) +
geom_jitter(width = 0.2, height = 0, size = 2, alpha = 0.7) +
labs(title = "BRTE DE by PVT and Season (FL)",
y = "DE",
x = "PVT") +
theme_minimal()
ggplot(brte_fl, aes(x = PVT, y = DP, color = Season)) +
geom_jitter(width = 0.2, height = 0, size = 2, alpha = 0.7) +
labs(title = "BRTE DP by PVT and Season (FL)",
y = "DP",
x = "PVT") +
theme_minimal()
# Pivot DE and DP into long format
brte_long <- brte_fl %>%
pivot_longer(
cols = c(DE, DP),
names_to = "Metric",
values_to = "Value"
)
# Plot with facets
ggplot(brte_long, aes(x = PVT, y = Value, color = Season)) +
geom_jitter(width = 0.2, height = 0, size = 2, alpha = 0.7) +
facet_wrap(~ Metric, scales = "free_y") +    # separate panels for DE and DP
labs(title = "BRTE DE and DP by PVT and Season (FL)",
y = "Value", x = "PVT") +
theme_minimal()
brte_fl <- d %>%
filter(Spp == "BRTE", Pheno == "FL") %>%
mutate(
Season = factor(Season, levels = c("SP", "SU")),
PVT = as.factor(PVT)
)
# Pivot DE and DP into long format
brte_long <- brte_fl %>%
pivot_longer(
cols = c(DE, DP),
names_to = "Metric",
values_to = "Value"
)
# Plot with facets
ggplot(brte_long, aes(x = PVT, y = Value, color = Season)) +
geom_jitter(width = 0.2, height = 0, size = 2, alpha = 0.7) +
facet_wrap(~ Metric, scales = "free_y") +    # separate panels for DE and DP
labs(title = "BRTE DE and DP by PVT and Season (FL)",
y = "Value", x = "PVT") +
theme_minimal()
brte_c <- d %>%
filter(Spp == "BRTE", Pheno == "C") %>%
mutate(
Season = factor(Season, levels = c("SP", "SU")),
PVT = as.factor(PVT)
)
# Pivot DE and DP into long format
brte_c <- brte_c %>%
pivot_longer(
cols = c(DE, DP),
names_to = "Metric",
values_to = "Value"
)
# Plot with facets
ggplot(brte_c, aes(x = PVT, y = Value, color = Season)) +
geom_jitter(width = 0.2, height = 0, size = 2, alpha = 0.7) +
facet_wrap(~ Metric, scales = "free_y") +    # separate panels for DE and DP
labs(title = "BRTE DE and DP by PVT and Season (FL)",
y = "Value", x = "PVT") +
theme_minimal()
brte_m <- d %>%
filter(Spp == "BRTE", Pheno == "M") %>%
mutate(
Season = factor(Season, levels = c("SP", "SU")),
PVT = as.factor(PVT)
)
# Pivot DE and DP into long format
brte_m <- brte_m %>%
pivot_longer(
cols = c(DE, DP),
names_to = "Metric",
values_to = "Value"
)
# Plot with facets
ggplot(brte_m, aes(x = PVT, y = Value, color = Season)) +
geom_jitter(width = 0.2, height = 0, size = 2, alpha = 0.7) +
facet_wrap(~ Metric, scales = "free_y") +    # separate panels for DE and DP
labs(title = "BRTE DE and DP by PVT and Season (FL)",
y = "Value", x = "PVT") +
theme_minimal()
pssp6_n <- d %>%
filter(Spp == "PSSP6", Pheno == "N") %>%
mutate(
Season = factor(Season, levels = c("SP", "SU")),
PVT = as.factor(PVT)
)
# Pivot DE and DP into long format
pssp6_n <- pssp6_n %>%
pivot_longer(
cols = c(DE, DP),
names_to = "Metric",
values_to = "Value"
)
# Plot with facets
ggplot(pssp6_n, aes(x = PVT, y = Value, color = Season)) +
geom_jitter(width = 0.2, height = 0, size = 2, alpha = 0.7) +
facet_wrap(~ Metric, scales = "free_y") +    # separate panels for DE and DP
labs(title = "PSSP6 DE and DP by PVT and Season (FL)",
y = "Value", x = "PVT") +
theme_minimal()
pssp6_fl <- d %>%
filter(Spp == "PSSP6", Pheno == "N") %>%
mutate(
Season = factor(Season, levels = c("SP", "SU")),
PVT = as.factor(PVT)
)
# Pivot DE and DP into long format
pssp6_fl <- pssp6_fl %>%
pivot_longer(
cols = c(DE, DP),
names_to = "Metric",
values_to = "Value"
)
# Plot with facets
ggplot(pssp6_fl, aes(x = PVT, y = Value, color = Season)) +
geom_jitter(width = 0.2, height = 0, size = 2, alpha = 0.7) +
facet_wrap(~ Metric, scales = "free_y") +    # separate panels for DE and DP
labs(title = "PSSP6 DE and DP by PVT and Season (FL)",
y = "Value", x = "PVT") +
theme_minimal()
pssp6_fl <- d %>%
filter(Spp == "PSSP6", Pheno == "FL") %>%
mutate(
Season = factor(Season, levels = c("SP", "SU")),
PVT = as.factor(PVT)
)
# Pivot DE and DP into long format
pssp6_fl <- pssp6_fl %>%
pivot_longer(
cols = c(DE, DP),
names_to = "Metric",
values_to = "Value"
)
# Plot with facets
ggplot(pssp6_fl, aes(x = PVT, y = Value, color = Season)) +
geom_jitter(width = 0.2, height = 0, size = 2, alpha = 0.7) +
facet_wrap(~ Metric, scales = "free_y") +    # separate panels for DE and DP
labs(title = "PSSP6 DE and DP by PVT and Season (FL)",
y = "Value", x = "PVT") +
theme_minimal()
pssp6_m <- d %>%
filter(Spp == "PSSP6", Pheno == "M") %>%
mutate(
Season = factor(Season, levels = c("SP", "SU")),
PVT = as.factor(PVT)
)
# Pivot DE and DP into long format
pssp6_m <- pssp6_m %>%
pivot_longer(
cols = c(DE, DP),
names_to = "Metric",
values_to = "Value"
)
# Plot with facets
ggplot(pssp6_m, aes(x = PVT, y = Value, color = Season)) +
geom_jitter(width = 0.2, height = 0, size = 2, alpha = 0.7) +
facet_wrap(~ Metric, scales = "free_y") +    # separate panels for DE and DP
labs(title = "PSSP6 DE and DP by PVT and Season (M)",
y = "Value", x = "PVT") +
theme_minimal()
amme_b <- d %>%
filter(Spp == "AMME", Pheno == "b") %>%
mutate(
Season = factor(Season, levels = c("SP", "SU")),
PVT = as.factor(PVT)
)
# Pivot DE and DP into long format
amme_b <- amme_b %>%
pivot_longer(
cols = c(DE, DP),
names_to = "Metric",
values_to = "Value"
)
# Plot with facets
ggplot(amme_b, aes(x = PVT, y = Value, color = Season)) +
geom_jitter(width = 0.2, height = 0, size = 2, alpha = 0.7) +
facet_wrap(~ Metric, scales = "free_y") +    # separate panels for DE and DP
labs(title = "AMME DE and DP by PVT and Season (B)",
y = "Value", x = "PVT") +
theme_minimal()
amme_b <- d %>%
filter(Spp == "AMME", Pheno == "B") %>%
mutate(
Season = factor(Season, levels = c("SP", "SU")),
PVT = as.factor(PVT)
)
# Pivot DE and DP into long format
amme_b <- amme_b %>%
pivot_longer(
cols = c(DE, DP),
names_to = "Metric",
values_to = "Value"
)
# Plot with facets
ggplot(amme_b, aes(x = PVT, y = Value, color = Season)) +
geom_jitter(width = 0.2, height = 0, size = 2, alpha = 0.7) +
facet_wrap(~ Metric, scales = "free_y") +    # separate panels for DE and DP
labs(title = "AMME DE and DP by PVT and Season (B)",
y = "Value", x = "PVT") +
theme_minimal()
acth7_fl<- d %>%
filter(Spp == "ACTH7", Pheno == "FL") %>%
mutate(
Season = factor(Season, levels = c("SP", "SU")),
PVT = as.factor(PVT)
)
# Pivot DE and DP into long format
acth7_fl <- acth7_fl %>%
pivot_longer(
cols = c(DE, DP),
names_to = "Metric",
values_to = "Value"
)
# Plot with facets
ggplot(acth7_fl, aes(x = PVT, y = Value, color = Season)) +
geom_jitter(width = 0.2, height = 0, size = 2, alpha = 0.7) +
facet_wrap(~ Metric, scales = "free_y") +    # separate panels for DE and DP
labs(title = "ACTH7 DE and DP by PVT and Season (FL)",
y = "Value", x = "PVT") +
theme_minimal()
season_comp <- summary_df %>%
pivot_wider(
names_from = Season,
values_from = c(DE_mean, DP_mean)
) %>%
mutate(
DE_diff = DE_mean_SU - DE_mean_SP,
DP_diff = DP_mean_SU - DP_mean_SP
)
View(season_comp)
write.csv(season_comp, "C:/Users/Alexis Means/Documents/Project/Nutrition Sampling/R code/quality/processed.data/season_comparison.csv")
write.csv(pvt_comp, "C:/Users/Alexis Means/Documents/Project/Nutrition Sampling/R code/quality/processed.data/pvt_comparison.csv")
# Define the path to the directory containing the file
excelpath <- "C:/Users/Alexis Means/Documents/Project/Nutrition Sampling/R code/FRESH/processed.data/"
# Define the specific file name
filename <- "FRESH.Subset.xlsx"
# Construct the full file path
excel.file <- file.path(excelpath, filename)
library(lpSolve)
library(tools)
library(dplyr)
library(sf)
library(tidyverse)
# Define the path to the directory containing the file
excelpath <- "C:/Users/Alexis Means/Documents/Project/Nutrition Sampling/R code/FRESH/processed.data/"
# Define the specific file name
filename <- "FRESH.Subset.xlsx"
# Construct the full file path
excel.file <- file.path(excelpath, filename)
# Load the workbook and read the data
library(openxlsx)
habitat <- loadWorkbook(excel.file)
data <- data.frame(readWorkbook(excel.file, sheet = "FRESH Data", startRow = 1, colNames = TRUE))
View(data)
database <- read.csv("C:/Users/Alexis Means/Documents/Project/Nutrition Sampling/R code/FRESH/raw.data/combine_protien.csv")
protein <- read.csv("C:/Users/Alexis Means/Documents/Project/Nutrition Sampling/R code/FRESH/raw.data/CrudeProtein_2024.csv")
fiber <- read.csv("C:/Users/Alexis Means/Documents/Project/Nutrition Sampling/R code/FRESH/raw.data/fiber_results.csv")
database
protein <- read.csv("C:/Users/Alexis Means/Documents/Project/Nutrition Sampling/R code/FRESH/raw.data/CrudeProtein_2024.csv")
fiber <- read.csv("C:/Users/Alexis Means/Documents/Project/Nutrition Sampling/R code/FRESH/raw.data/fiber_results.csv")
protein
fiber
#
database <- database %>%
left_join(protein,
by = "Sample_ID",
relationship = "many-to-one") %>%
select(-Test, -DairyOne_ID, -X, -X.1)
database
database <- database %>%
left_join(combined_quality,
by = "ID") %>%
select(PVT.x, Spp.x, Pheno.x, Part.x, ID, Sample_ID, Description, CP) %>%
left_join(fiber,
by = "Sample_ID")
fiber
database <- database %>%
left_join(fiber,
by = "Sample_ID")
database <- database %>%
left_join(fiber,
by = "Sample_ID",
relationship = "many-to-one")
database <- read.csv("C:/Users/Alexis Means/Documents/Project/Nutrition Sampling/R code/FRESH/raw.data/combine_protien.csv")
protein <- read.csv("C:/Users/Alexis Means/Documents/Project/Nutrition Sampling/R code/FRESH/raw.data/CrudeProtein_2024.csv")
fiber <- read.csv("C:/Users/Alexis Means/Documents/Project/Nutrition Sampling/R code/FRESH/raw.data/fiber_results.csv")
#
database <- database %>%
left_join(protein,
by = "Sample_ID",
relationship = "many-to-one") %>%
select(-Test, -DairyOne_ID, -X, -X.1)
database <- database %>%
left_join(fiber,
by = "Sample_ID",
relationship = "one-to-many")
database <- database %>%
left_join(fiber,
by = "Sample_ID",
relationship = "many-to-many")
database
database <- read.csv("C:/Users/Alexis Means/Documents/Project/Nutrition Sampling/R code/FRESH/raw.data/combine_protien.csv")
protein <- read.csv("C:/Users/Alexis Means/Documents/Project/Nutrition Sampling/R code/FRESH/raw.data/CrudeProtein_2024.csv")
fiber <- read.csv("C:/Users/Alexis Means/Documents/Project/Nutrition Sampling/R code/FRESH/raw.data/fiber_results.csv")
#
database <- database %>%
left_join(protein,
by = "Sample_ID",
relationship = "many-to-one") %>%
select(-Test, -DairyOne_ID, -X, -X.1)
database <- read.csv("C:/Users/Alexis Means/Documents/Project/Nutrition Sampling/R code/FRESH/raw.data/combine_protien.csv")
database
#
database <- database %>%
left_join(protein,
by = "Sample_ID",
relationship = "many-to-one") %>%
select(-Test, -DairyOne_ID, -X, -X.1)
database
combined_protien <- read.csv("C:/Users/Alexis Means/Documents/Project/Nutrition Sampling/R code/FRESH/raw.data/combine_protien.csv")
protein <- read.csv("C:/Users/Alexis Means/Documents/Project/Nutrition Sampling/R code/FRESH/raw.data/CrudeProtein_2024.csv")
fiber <- read.csv("C:/Users/Alexis Means/Documents/Project/Nutrition Sampling/R code/FRESH/raw.data/fiber_results.csv")
#
database <- combined_protien %>%
left_join(protein,
by = "Sample_ID",
relationship = "many-to-one") %>%
select(-Test, -DairyOne_ID, -X, -X.1)
