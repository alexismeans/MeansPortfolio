labels = c("Low", "High")  # Replace numerical values with "Low" and "High"
) +
labs(title = "Normalized Density of Biomass (Native vs Invasive Species by Month)",
x = "Easting",
y = "Northing") +
theme_minimal() +
theme(axis.text = element_blank(),  # Remove tick labels
axis.ticks = element_blank())
#| warning: FALSE
# Filter for observations with Species Code "BRTE"
cheat.sum <- spp.map %>%
filter(!is.na(Biomass) & Biomass > 0, Code == "BRTE") %>%  # Remove NAs and filter for "BRTE"
mutate(Month = case_when(
Julian_Day >= 93 & Julian_Day < 124 ~ "April",
Julian_Day >= 124 & Julian_Day < 155 ~ "May",
Julian_Day >= 155 & Julian_Day < 185 ~ "June",
Julian_Day >= 185 & Julian_Day <= 212 ~ "July",
TRUE ~ NA_character_
)) %>%
filter(!is.na(Month)) %>%
mutate(Month = factor(Month, levels = c("April", "May", "June", "July")))  # Set correct order
# Normalize biomass within each month (to make sample sizes comparable)
cheat.sum <- cheat.sum %>%
group_by(Month) %>%
mutate(Total_Biomass = sum(Biomass),  # Calculate total biomass for each month
Normalized_Biomass = Biomass / Total_Biomass) %>%  # Normalize biomass
ungroup()  # Remove grouping
# Create density plot faceted by Month and Status for species "BRTE"
ggplot(cheat.sum, aes(x = Easting, y = Northing, weight = Normalized_Biomass)) +
stat_density_2d(aes(fill = after_stat(density)), geom = "raster", contour = FALSE) +
facet_grid(Month ~ Code) +  # Grid facet by Month (rows) and Status (columns)
scale_fill_viridis_c(
name = "Biomass Density",
option = "turbo",
breaks = c(1e-09, 7e-09),  # Define specific density values
labels = c("Low", "High")  # Replace numerical values with "Low" and "High"
) +
labs(title = "Normalized Density of Biomass for BRTE by month",
x = "Easting",
y = "Northing") +
theme_minimal() +
theme(axis.text = element_blank(),  # Remove tick labels
axis.ticks = element_blank())
gps <- read.csv("C:/Users/Alexis Means/Documents/Project/Demographics/Code/cleaned.data/sheep_clean_24.csv")
gps <- gps %>%
rename(Easting = x_,
Northing = y_)
# Step 1: Kernel Density Estimation (KDE) for GPS data
gps_kde <- ggplot(gps, aes(x = Easting, y = Northing)) +
stat_density_2d(aes(fill = after_stat(density)), geom = "raster", contour = FALSE) +
scale_fill_viridis_c(option = "inferno",
name = "GPS Use Density",
breaks = c(1e-09, 10e-09),  # Define specific density values
labels = c("Low", "High")  # Replace  values with "Low" and "High"
) +
labs(title = "Sheep Area Use")+
theme_minimal()+
theme(axis.text = element_blank(),  # Remove tick labels
axis.ticks = element_blank())
plot(gps_kde)
# Extracting the kernel density data (for plotting purposes)
gps_kde_data <- ggplot_build(gps_kde)$data[[1]]
# Step 2: Existing biomass density plot with high-use overlay
ggplot(month.sum, aes(x = Easting, y = Northing, weight = Normalized_Biomass)) +
stat_density_2d(aes(fill = after_stat(density)), geom = "raster", contour = FALSE) +
facet_grid(Month ~ Status) +  # Grid facet by Month (rows) and Status (columns)
scale_fill_viridis_c(
name = "Biomass Density",
option = "turbo",
breaks = c(2e-09, 11e-09),  # Define specific density values
labels = c("Low", "High")  # Replace numerical values with "Low" and "High"
) +
labs(title = "Normalized Density of Biomass with High Use Areas (Native vs Invasive Species by Month)",
x = "Easting",
y = "Northing") +
theme_minimal() +
theme(axis.text = element_blank(),  # Remove tick labels
axis.ticks = element_blank()) +
# Overlay GPS density
geom_raster(data = gps_kde_data, aes(x = Easting, y = Northing, fill = after_stat(density)),
alpha = 0.5) +
scale_fill_viridis_c(option = "inferno", name = "GPS Use Density", alpha = 0.5)  # Adjust transparency
ggplot(month.sum, aes(x = Easting, y = Northing, weight = Normalized_Biomass)) +
stat_density_2d(aes(fill = after_stat(density)), geom = "raster", contour = FALSE) +
facet_grid(Month ~ Status) +  # Grid facet by Month (rows) and Status (columns)
scale_fill_viridis_c(
name = "Biomass Density",
option = "turbo",
breaks = c(2e-09, 11e-09),  # Define specific density values
labels = c("Low", "High")  # Replace numerical values with "Low" and "High"
) +
labs(title = "Normalized Density of Biomass with GPS Locations (Native vs Invasive Species by Month)",
x = "Easting",
y = "Northing") +
theme_minimal() +
theme(axis.text = element_blank(),  # Remove tick labels
axis.ticks = element_blank()) +
# Overlay GPS points
geom_point(data = gps_data, aes(x = Easting, y = Northing),
color = "red", alpha = 0.5, size = 0.8)  # Adjust color, transparency, and size
ggplot(month.sum, aes(x = Easting, y = Northing, weight = Normalized_Biomass)) +
stat_density_2d(aes(fill = after_stat(density)), geom = "raster", contour = FALSE) +
facet_grid(Month ~ Status) +  # Grid facet by Month (rows) and Status (columns)
scale_fill_viridis_c(
name = "Biomass Density",
option = "turbo",
breaks = c(2e-09, 11e-09),  # Define specific density values
labels = c("Low", "High")  # Replace numerical values with "Low" and "High"
) +
labs(title = "Normalized Density of Biomass with GPS Locations (Native vs Invasive Species by Month)",
x = "Easting",
y = "Northing") +
theme_minimal() +
theme(axis.text = element_blank(),  # Remove tick labels
axis.ticks = element_blank()) +
# Overlay GPS points
geom_point(data = gps, aes(x = Easting, y = Northing),
color = "red", alpha = 0.5, size = 0.8)  # Adjust color, transparency, and size
#| warning: FALSE
month.sum <- spp.map %>%
filter(!is.na(Biomass) & Biomass > 0) %>%  # Remove NAs
mutate(Month = case_when(
Julian_Day >= 93 & Julian_Day < 124 ~ "April",
Julian_Day >= 124 & Julian_Day < 155 ~ "May",
Julian_Day >= 155 & Julian_Day < 185 ~ "June",
Julian_Day >= 185 & Julian_Day <= 212 ~ "July",
TRUE ~ NA_character_
)) %>%
filter(!is.na(Month)) %>%
mutate(Month = factor(Month, levels = c("April", "May", "June", "July")))
# Normalize biomass within each month (to make sample sizes comparable)
month.sum <- month.sum %>%
group_by(Month) %>%
mutate(Total_Biomass = sum(Biomass),  # Calculate total biomass for each month
Normalized_Biomass = Biomass / Total_Biomass) %>%  # Normalize biomass
ungroup()  # Remove grouping
ggplot(month.sum, aes(x = Easting, y = Northing, weight = Normalized_Biomass)) +
stat_density_2d(aes(fill = after_stat(density)), geom = "raster", contour = FALSE) +
facet_grid(Month ~ Status) +  # Grid facet by Month (rows) and Status (columns)
scale_fill_viridis_c(
name = "Biomass Density",
option = "turbo",
breaks = c(2e-09, 11e-09),  # Define specific density values
labels = c("Low", "High")  # Replace numerical values with "Low" and "High"
) +
labs(title = "Normalized Density of Biomass with GPS Locations (Native vs Invasive Species by Month)",
x = "Easting",
y = "Northing") +
theme_minimal() +
theme(axis.text = element_blank(),  # Remove tick labels
axis.ticks = element_blank()) +
# Overlay GPS points
geom_point(data = gps, aes(x = Easting, y = Northing),
color = "red", alpha = 0.5, size = 0.8)  # Adjust color, transparency, and size
ggplot() +
# Biomass density heatmap
geom_raster(data = month.sum, aes(x = Easting, y = Northing, fill = Normalized_Biomass), alpha = 0.8) +
facet_grid(Month ~ Status) +  # Grid facet by Month (rows) and Status (columns)
scale_fill_viridis_c(
name = "Biomass Density",
option = "turbo",
breaks = c(2e-09, 11e-09),  # Define specific density values
labels = c("Low", "High")  # Replace numerical values with "Low" and "High"
) +
labs(title = "Normalized Density of Biomass with GPS Locations (Native vs Invasive Species by Month)",
x = "Easting",
y = "Northing") +
theme_minimal() +
theme(axis.text = element_blank(),  # Remove tick labels
axis.ticks = element_blank()) +
# Overlay GPS points
geom_point(data = gps, aes(x = Easting, y = Northing),
color = "red", alpha = 0.5, size = 0.8)  # Adjust color, transparency, and size
ggplot() +
# Biomass density heatmap using kernel density estimation
stat_density_2d(
data = month.sum,
aes(x = Easting, y = Northing, weight = Normalized_Biomass, fill = after_stat(density)),
geom = "raster",
contour = FALSE
) +
facet_grid(Month ~ Status) +  # Grid facet by Month (rows) and Status (columns)
scale_fill_viridis_c(
name = "Biomass Density",
option = "turbo",
breaks = c(2e-09, 11e-09),  # Define specific density values
labels = c("Low", "High")  # Replace numerical values with "Low" and "High"
) +
labs(title = "Normalized Density of Biomass with GPS Locations (Native vs Invasive Species by Month)",
x = "Easting",
y = "Northing") +
theme_minimal() +
theme(axis.text = element_blank(),  # Remove tick labels
axis.ticks = element_blank()) +
# Overlay GPS points
geom_point(
data = gps, aes(x = Easting, y = Northing),
color = "red", alpha = 0.5, size = 0.8
)  # Adjust color, transparency, and size
# Extract month from the GPS timestamp
gps <- gps %>%
mutate(Month = case_when(
month(t_) == 4 ~ "April",
month(t_) == 5 ~ "May",
month(t_) == 6 ~ "June",
month(t_) == 7 ~ "July",
TRUE ~ NA_character_
)) %>%
filter(!is.na(Month))
ggplot() + # Biomass density heatmap using kernel density estimation
stat_density_2d(
data = month.sum,
aes(x = Easting, y = Northing, weight = Normalized_Biomass, fill = after_stat(density)),
geom = "raster",
contour = FALSE
) +
facet_grid(Month ~ Status) +  # Grid facet by Month (rows) and Status (columns)
scale_fill_viridis_c(
name = "Biomass Density",
option = "turbo",
breaks = c(2e-09, 11e-09),  # Define specific density values
labels = c("Low", "High")  # Replace numerical values with "Low" and "High"
) +
labs(title = "Normalized Density of Biomass with GPS Locations (Native vs Invasive Species by Month)",
x = "Easting",
y = "Northing") +
theme_minimal() +
theme(axis.text = element_blank(),  # Remove tick labels
axis.ticks = element_blank()) +
# Overlay GPS points, filtering by Month to match the facet
geom_point(
data = gps,
aes(x = Easting, y = Northing),
color = "red", alpha = 0.5, size = 0.8
)
ggplot() + # Biomass density heatmap using kernel density estimation
stat_density_2d(
data = month.sum,
aes(x = Easting, y = Northing, weight = Normalized_Biomass, fill = after_stat(density)),
geom = "raster",
contour = FALSE
) +
facet_grid(Month ~ Status) +  # Grid facet by Month (rows) and Status (columns)
scale_fill_viridis_c(
name = "Biomass Density",
option = "turbo",
breaks = c(2e-09, 11e-09),  # Define specific density values
labels = c("Low", "High")  # Replace numerical values with "Low" and "High"
) +
labs(title = "Normalized Density of Biomass with GPS Locations (Native vs Invasive Species by Month)",
x = "Easting",
y = "Northing") +
theme_minimal() +
theme(axis.text = element_blank(),  # Remove tick labels
axis.ticks = element_blank()) +
# Overlay GPS points, filtering by Month to match the facet
geom_point(
data = gps,
aes(x = Easting, y = Northing),
color = "red", alpha = 0., size = 0.8
)
ggplot() + # Biomass density heatmap using kernel density estimation
stat_density_2d(
data = month.sum,
aes(x = Easting, y = Northing, weight = Normalized_Biomass, fill = after_stat(density)),
geom = "raster",
contour = FALSE
) +
facet_grid(Month ~ Status) +  # Grid facet by Month (rows) and Status (columns)
scale_fill_viridis_c(
name = "Biomass Density",
option = "turbo",
breaks = c(2e-09, 11e-09),  # Define specific density values
labels = c("Low", "High")  # Replace numerical values with "Low" and "High"
) +
labs(title = "Normalized Density of Biomass with GPS Locations (Native vs Invasive Species by Month)",
x = "Easting",
y = "Northing") +
theme_minimal() +
theme(axis.text = element_blank(),  # Remove tick labels
axis.ticks = element_blank()) +
# Overlay GPS points, filtering by Month to match the facet
geom_point(
data = gps,
aes(x = Easting, y = Northing),
color = "red", alpha = 0.2, size = 0.8
)
ggplot() + # Biomass density heatmap using kernel density estimation
stat_density_2d(
data = month.sum,
aes(x = Easting, y = Northing, weight = Normalized_Biomass, fill = after_stat(density)),
geom = "raster",
contour = FALSE
) +
facet_grid(Month ~ Status) +  # Grid facet by Month (rows) and Status (columns)
scale_fill_viridis_c(
name = "Biomass Density",
option = "turbo",
breaks = c(2e-09, 11e-09),  # Define specific density values
labels = c("Low", "High")  # Replace numerical values with "Low" and "High"
) +
labs(title = "Normalized Density of Biomass with GPS Locations (Native vs Invasive Species by Month)",
x = "Easting",
y = "Northing") +
theme_minimal() +
theme(axis.text = element_blank(),  # Remove tick labels
axis.ticks = element_blank()) +
# Overlay GPS points, filtering by Month to match the facet
geom_point(
data = gps,
aes(x = Easting, y = Northing),
color = "red", alpha = 0.1, size = 0.4
)
ggplot() + # Biomass density heatmap using kernel density estimation
stat_density_2d(
data = month.sum,
aes(x = Easting, y = Northing, weight = Normalized_Biomass, fill = after_stat(density)),
geom = "raster",
contour = FALSE
) +
facet_grid(Month ~ Status) +  # Grid facet by Month (rows) and Status (columns)
scale_fill_viridis_c(
name = "Biomass Density",
option = "turbo",
breaks = c(2e-09, 11e-09),  # Define specific density values
labels = c("Low", "High")  # Replace numerical values with "Low" and "High"
) +
labs(title = "Normalized Density of Biomass with GPS Locations (Native vs Invasive Species by Month)",
x = "Easting",
y = "Northing") +
theme_minimal() +
theme(axis.text = element_blank(),  # Remove tick labels
axis.ticks = element_blank()) +
# Overlay GPS points, filtering by Month to match the facet
geom_hex(
data = gps,
aes(x = Easting, y = Northing),
color = "red", alpha = 0.1, size = 0.4
)
ggplot() + # Biomass density heatmap using kernel density estimation
stat_density_2d(
data = month.sum,
aes(x = Easting, y = Northing, weight = Normalized_Biomass, fill = after_stat(density)),
geom = "raster",
contour = FALSE
) +
facet_grid(Month ~ Status) +  # Grid facet by Month (rows) and Status (columns)
scale_fill_viridis_c(
name = "Biomass Density",
option = "turbo",
breaks = c(2e-09, 11e-09),  # Define specific density values
labels = c("Low", "High")  # Replace numerical values with "Low" and "High"
) +
labs(title = "Normalized Density of Biomass with GPS Locations (Native vs Invasive Species by Month)",
x = "Easting",
y = "Northing") +
theme_minimal() +
theme(axis.text = element_blank(),  # Remove tick labels
axis.ticks = element_blank()) +
# Overlay GPS points, filtering by Month to match the facet
geom_hex(data = gps, aes(x = Easting, y = Northing), bins = 30, alpha = 0.6) +
scale_fill_viridis_c(option = "inferno", name = "GPS Density")
ggplot() + # Biomass density heatmap using kernel density estimation
stat_density_2d(
data = month.sum,
aes(x = Easting, y = Northing, weight = Normalized_Biomass, fill = after_stat(density)),
geom = "raster",
contour = FALSE
) +
facet_grid(Month ~ Status) +  # Grid facet by Month (rows) and Status (columns)
scale_fill_viridis_c(
name = "Biomass Density",
option = "turbo",
breaks = c(2e-09, 11e-09),  # Define specific density values
labels = c("Low", "High")  # Replace numerical values with "Low" and "High"
) +
labs(title = "Normalized Density of Biomass with GPS Locations (Native vs Invasive Species by Month)",
x = "Easting",
y = "Northing") +
theme_minimal() +
theme(axis.text = element_blank(),  # Remove tick labels
axis.ticks = element_blank()) +
# Overlay GPS points, filtering by Month to match the facet
geom_point(
data = gps,
aes(x = Easting, y = Northing),
color = "red", alpha = 0.1, size = 0.4
)
#| warning: FALSE
month.sum <- spp.map %>%
filter(!is.na(Biomass) & Biomass > 0) %>%  # Remove NAs
mutate(Month = case_when(
Julian_Day >= 93 & Julian_Day < 124 ~ "April",
Julian_Day >= 124 & Julian_Day < 155 ~ "May",
Julian_Day >= 155 & Julian_Day < 185 ~ "June",
Julian_Day >= 185 & Julian_Day <= 212 ~ "July",
TRUE ~ NA_character_
)) %>%
filter(!is.na(Month)) %>%
mutate(Month = factor(Month, levels = c("April", "May", "June", "July")))
# Normalize biomass within each month (to make sample sizes comparable)
month.sum <- month.sum %>%
group_by(Month) %>%
mutate(Total_Biomass = sum(Biomass),  # Calculate total biomass for each month
Normalized_Biomass = Biomass / Total_Biomass) %>%  # Normalize biomass
ungroup()  # Remove grouping
# Extract month from the GPS timestamp
gps <- gps %>%
mutate(Month = case_when(
month(t_) == 4 ~ "April",
month(t_) == 5 ~ "May",
month(t_) == 6 ~ "June",
month(t_) == 7 ~ "July",
TRUE ~ NA_character_
)) %>%
filter(!is.na(Month)) %>%
mutate(Month = factor(Month, levels = c("April", "May", "June", "July")))
ggplot() + # Biomass density heatmap using kernel density estimation
stat_density_2d(
data = month.sum,
aes(x = Easting, y = Northing, weight = Normalized_Biomass, fill = after_stat(density)),
geom = "raster",
contour = FALSE
) +
facet_grid(Month ~ Status) +  # Grid facet by Month (rows) and Status (columns)
scale_fill_viridis_c(
name = "Biomass Density",
option = "turbo",
breaks = c(2e-09, 11e-09),  # Define specific density values
labels = c("Low", "High")  # Replace numerical values with "Low" and "High"
) +
labs(title = "Normalized Density of Biomass with GPS Locations (Native vs Invasive Species by Month)",
x = "Easting",
y = "Northing") +
theme_minimal() +
theme(axis.text = element_blank(),  # Remove tick labels
axis.ticks = element_blank()) +
# Overlay GPS points, filtering by Month to match the facet
geom_point(
data = gps,
aes(x = Easting, y = Northing),
color = "red", alpha = 0.1, size = 0.4
)
ggplot(data, aes(x = DP, y = DE)) +
geom_point(color = "blue", alpha = 0.6) +
geom_smooth(method = "lm", se = TRUE, color = "red") +  # Linear trend line
labs(title = "Relationship Between DE and DP by Phenology",
x = "Digestible Protein (DP)",
y = "Digestible Energy (DE)") +
theme_minimal() +
# Set phenology as a factor with a specific order
facet_wrap(~ Phenology, scales = "free") +
scale_x_continuous(expand = c(0.05, 0)) +  # Adjust spacing
scale_y_continuous(expand = c(0.05, 0)) +
theme(strip.text = element_text(face = "bold"))  # Bold facet labels
# Ensure the correct order of the facets
data$Phenology <- factor(data$Phenology, levels = c("N", "B", "FL", "FR", "M", "C"))
ggplot(data, aes(x = DP, y = DE)) +
geom_point(color = "blue", alpha = 0.6) +
geom_smooth(method = "lm", se = TRUE, color = "red") +  # Linear trend line
labs(title = "Relationship Between DE and DP by Phenology",
x = "Digestible Protein (DP)",
y = "Digestible Energy (DE)") +
theme_minimal() +
# Set phenology as a factor with a specific order
facet_wrap(~ Phenology, scales = "free") +
scale_x_continuous(expand = c(0.05, 0)) +  # Adjust spacing
scale_y_continuous(expand = c(0.05, 0)) +
theme(strip.text = element_text(face = "bold"))  # Bold facet labels
# Ensure Phenology is a factor with the correct order
data$Phenology <- factor(data$Phenology, levels = c("N", "B", "FL", "FR", "M", "C"))
ggplot(data, aes(x = Phenology, y = DE, fill = Phenology)) +
geom_boxplot(alpha = 0.7, outlier.shape = NA) +  # Boxplot without outlier points
geom_jitter(width = 0.2, alpha = 0.4, color = "black") +  # Add jitter for visibility
facet_wrap(~ Phenology, scales = "free") +  # Facet by Phenology
scale_fill_viridis_d(option = "plasma") +  # Use a color palette
labs(title = "Distribution of Digestible Energy (DE) by Phenology",
x = "Phenology",
y = "Digestible Energy (DE)") +
theme_minimal() +
theme(strip.text = element_text(face = "bold"), legend.position = "none")  # Bold facet labels, remove legend
ggplot(data, aes(x = Phenology, y = DE, fill = Phenology)) +
geom_boxplot(alpha = 0.7, outlier.shape = NA) +  # Boxplot without outlier points
geom_jitter(width = 0.2, alpha = 0.4, color = "black") +  # Add jitter for visibility
scale_fill_viridis_d(option = "plasma") +  # Use a color palette
labs(title = "Distribution of Digestible Energy (DE) by Phenology",
x = "Phenology",
y = "Digestible Energy (DE)") +
theme_minimal() +
theme(legend.position = "none")  # Remove legend since color is redundant
ggplot(data, aes(x = Phenology, y = DP, fill = Phenology)) +
geom_boxplot(alpha = 0.7, outlier.shape = NA) +  # Boxplot without outlier points
geom_jitter(width = 0.2, alpha = 0.4, color = "black") +  # Add jitter for visibility
scale_fill_viridis_d(option = "plasma") +  # Use a color palette
labs(title = "Distribution of Digestible Energy (DE) by Phenology",
x = "Phenology",
y = "Digestible Protien (DP)") +
theme_minimal() +
theme(legend.position = "none")
data$Phenology <- factor(data$Phenology, levels = c("N", "B", "FL", "FR", "M", "C"))
ggplot(data, aes(x = DP, y = DE)) +
geom_point(color = "blue", alpha = 0.6) +
geom_smooth(method = "lm", se = TRUE, color = "red") +  # Linear trend line
labs(title = "Relationship Between DE and DP by Phenology",
x = "Digestible Protein (DP)",
y = "Digestible Energy (DE)") +
theme_minimal() +
# Set phenology as a factor with a specific order
facet_wrap(~ Phenology, scales = "free") +
scale_x_continuous(expand = c(0.05, 0)) +  # Adjust spacing
scale_y_continuous(expand = c(0.05, 0)) +
theme(strip.text = element_text(face = "bold"))  # Bold facet labels
