mean_biomass = mean(SuitableBiomass, na.rm = TRUE),
sd_biomass = sd(SuitableBiomass, na.rm = TRUE)
)
# Create the boxplot
ggplot(data, aes(x = PVT, y = SuitableBiomass, fill = PVT)) +
geom_boxplot(outlier.shape = NA, alpha = 0.5) +  # Boxplot without outliers
stat_summary(fun = mean, geom = "point", color = "black", size = 3) +  # Mean point
geom_errorbar(data = summary_stats, aes(x = PVT, ymin = mean_biomass - sd_biomass, ymax = mean_biomass + sd_biomass),
width = 0.2, color = "black") +  # Standard deviation error bars
labs(title = "Suitable Biomass by PVT",
x = "PVT",
y = "Suitable Biomass") +
theme_minimal() +
theme(legend.position = "none")
colnames(data)
# Create the boxplot
ggplot(data, aes(x = PVT, y = "SuitableBiomass", fill = PVT)) +
geom_boxplot(outlier.shape = NA, alpha = 0.5) +  # Boxplot without outliers
stat_summary(fun = mean, geom = "point", color = "black", size = 3) +  # Mean point
geom_errorbar(data = summary_stats, aes(x = PVT, ymin = mean_biomass - sd_biomass, ymax = mean_biomass + sd_biomass),
width = 0.2, color = "black") +  # Standard deviation error bars
labs(title = "Suitable Biomass by PVT",
x = "PVT",
y = "Suitable Biomass") +
theme_minimal() +
theme(legend.position = "none")
data <- as.data.frame(data)
# Calculate mean and standard deviation for each PVT category
summary_stats <- data %>%
group_by(PVT) %>%
summarise(
mean_biomass = mean(SuitableBiomass, na.rm = TRUE),
sd_biomass = sd(SuitableBiomass, na.rm = TRUE)
)
# Create the boxplot
ggplot(data, aes(x = PVT, y = SuitableBiomass, fill = PVT)) +
geom_boxplot(outlier.shape = NA, alpha = 0.5) +  # Boxplot without outliers
stat_summary(fun = mean, geom = "point", color = "black", size = 3) +  # Mean point
geom_errorbar(data = summary_stats, aes(x = PVT, ymin = mean_biomass - sd_biomass, ymax = mean_biomass + sd_biomass),
width = 0.2, color = "black") +  # Standard deviation error bars
labs(title = "Suitable Biomass by PVT",
x = "PVT",
y = "Suitable Biomass") +
theme_minimal() +
theme(legend.position = "none")
# Calculate mean and standard deviation for each PVT category
summary_stats <- data %>%
group_by(PVT) %>%
summarise(
mean_biomass = mean(SuitableBiomass, na.rm = TRUE),
sd_biomass = sd(SuitableBiomass, na.rm = TRUE)
)
View(summary_stats)
# Create the boxplot
ggplot(data, aes(x = PVT, y = `SuitableBiomass`, fill = PVT)) +
geom_boxplot(outlier.shape = NA, alpha = 0.5) +  # Boxplot without outliers
stat_summary(fun = mean, geom = "point", color = "black", size = 3) +  # Mean point
geom_errorbar(data = summary_stats, aes(x = PVT, ymin = mean_biomass - sd_biomass, ymax = mean_biomass + sd_biomass),
width = 0.2, color = "black") +  # Standard deviation error bars
labs(title = "Suitable Biomass by PVT",
x = "PVT",
y = "Suitable Biomass") +
theme_minimal() +
theme(legend.position = "none")
# Create the boxplot
ggplot(data, aes(x = PVT, y = `SuitableBiomass`, fill = PVT)) +
geom_boxplot(outlier.shape = NA, alpha = 0.5) +  # Boxplot without outliers
stat_summary(fun = mean, geom = "point", color = "black", size = 3) +  # Mean point  # Standard deviation error bars
labs(title = "Suitable Biomass by PVT",
x = "PVT",
y = "Suitable Biomass") +
theme_minimal() +
theme(legend.position = "none")
# Ensure SuitableBiomass is numeric
data <- data %>% mutate(SuitableBiomass = as.numeric(SuitableBiomass))
# Compute mean & standard deviation for error bars
summary_stats <- data %>%
group_by(PVT) %>%
summarise(
mean_biomass = mean(SuitableBiomass, na.rm = TRUE),
sd_biomass = sd(SuitableBiomass, na.rm = TRUE)
) %>%
ungroup()  # Ensure it's not grouped
# Ensure PVT is a factor in both datasets
data <- data %>% mutate(PVT = factor(PVT))
summary_stats <- summary_stats %>% mutate(PVT = factor(PVT))
# Boxplot with standard deviation error bars
ggplot(data, aes(x = PVT, y = SuitableBiomass, fill = PVT)) +
geom_boxplot(outlier.shape = NA, alpha = 0.5) +  # Boxplot without outliers
stat_summary(fun = mean, geom = "point", color = "black", size = 3) +  # Mean point
geom_errorbar(data = summary_stats,
aes(x = PVT, ymin = mean_biomass - sd_biomass, ymax = mean_biomass + sd_biomass),
width = 0.2, color = "black") +  # Standard deviation bars
labs(title = "Suitable Biomass by PVT",
x = "PVT",
y = "Suitable Biomass") +
theme_minimal() +
theme(legend.position = "none")
# Add mean_biomass and sd_biomass to the data dataframe
data <- data %>%
group_by(PVT) %>%
mutate(
mean_biomass = mean(SuitableBiomass, na.rm = TRUE),
sd_biomass = sd(SuitableBiomass, na.rm = TRUE)
) %>%
ungroup()  # Remove grouping after mutation
# Boxplot with standard deviation error bars and total biomass label
ggplot(data, aes(x = PVT, y = SuitableBiomass, fill = PVT)) +
# Boxplot without outliers
geom_boxplot(outlier.shape = NA, alpha = 0.5) +
# Add a point for the mean biomass
stat_summary(fun = mean, geom = "point", color = "black", size = 3) +
# Add standard deviation error bars using the newly added columns
geom_errorbar(aes(ymin = mean_biomass - sd_biomass, ymax = mean_biomass + sd_biomass),
width = 0.2, color = "black") +
# Add a label for total biomass (sum of SuitableBiomass for each PVT)
geom_text(data = data %>%
group_by(PVT) %>%
summarise(total_biomass = sum(SuitableBiomass, na.rm = TRUE)) %>%
ungroup(),
aes(x = PVT, y = 0, label = paste("Total Biomass:", round(total_biomass, 2))),
color = "red", vjust = -1.5) +  # Position the label below the box
labs(title = "Suitable Biomass by PVT",
x = "PVT",
y = "Suitable Biomass") +
theme_minimal() +
theme(legend.position = "none")
totals <- read.csv("test.totals.csv")
transect <- read.csv("../raw.data/transect.csv")
#formatting plot database
plot <- transect %>%
rename(TransectID = PlotID,
Lat = BeginLat,
Long = BeginLong) %>%
select(Dates, TransectID, PVT, Lat, Long)
#formatting fdata
fdata <- fdata %>%
select(-Max, -DE.SD, -DP.SD, -Pct_Used, -SuitableBiomass)
data <- plot %>%
left_join(y = totals,
by = "TransectID") %>%
left_join(y = fdata,
by = "TransectID",
relationship = "one-to-many")
totals <- read.csv("test.totals.csv")
fdata <- read.csv("test.fdata.csv")
#formatting plot database
plot <- transect %>%
rename(TransectID = PlotID,
Lat = BeginLat,
Long = BeginLong) %>%
select(Dates, TransectID, PVT, Lat, Long)
plot <- plot %>%
mutate(Dates = mdy(Dates),
JulianDay = yday(Dates)) %>%
st_as_sf(coords = c("Long", "Lat"), crs = 4326) %>%
st_transform(crs = 32611) %>%
mutate(Easting = st_coordinates(.)[,1],
Northing = st_coordinates(.)[,2]) %>%
select(JulianDay, TransectID, PVT, Easting, Northing) %>%
st_drop_geometry()
#formatting fdata
fdata <- fdata %>%
select(-Max, -DE.SD, -DP.SD, -Pct_Used, -SuitableBiomass)
data <- plot %>%
left_join(y = totals,
by = "TransectID") %>%
left_join(y = fdata,
by = "TransectID",
relationship = "one-to-many")
#I hate the way it is arranged, so I am going to rearrange it
data <- data %>%
select(JulianDay, PVT, TransectID, Plant.Code, Phenology, Part, Biomass, Biomass_Used, Pct_Suitable_Biomass, SuitableBiomass, DE, TotalDE, AveDE, DP, TotalDP, AveDP, Easting, Northing)
#recategorize PVT
data <- data %>%
mutate(PVT = recode(PVT,
`672` = "Grassland",
`668` = "Scabland",
`669` = "Sagebrush Shrubland",
`674` = "Sagebrush Steppe",
`682` = "Riparian"))
rm(fdata, plot, totals, transect)
# Ensure SuitableBiomass is numeric
data <- data %>% mutate(SuitableBiomass = as.numeric(SuitableBiomass))
data <- data %>%
group_by(PVT) %>%
mutate(
mean_biomass = mean(SuitableBiomass, na.rm = TRUE),
sd_biomass = sd(SuitableBiomass, na.rm = TRUE)
) %>%
ungroup()  # Remove grouping after mutation
# Bar graph with standard deviation error bars and total biomass label
ggplot(data, aes(x = PVT, y = mean_biomass, fill = PVT)) +
# Bar plot using mean biomass for each PVT
geom_col(alpha = 0.7) +
# Add standard deviation error bars using the newly added columns
geom_errorbar(aes(ymin = mean_biomass - sd_biomass, ymax = mean_biomass + sd_biomass),
width = 0.2, color = "black") +
# Add a label for total biomass (sum of SuitableBiomass for each PVT)
geom_text(data = data %>%
group_by(PVT) %>%
summarise(total_biomass = sum(SuitableBiomass, na.rm = TRUE)) %>%
ungroup(),
aes(x = PVT, y = 0, label = paste("Total Biomass:", round(total_biomass, 2))),
color = "red", vjust = -1.5) +  # Position the label below the bars
labs(title = "Suitable Biomass by PVT",
x = "PVT",
y = "Mean Suitable Biomass") +
theme_minimal() +
theme(legend.position = "none")
ungroup()+
# Bar graph with standard deviation error bars and total biomass label
ggplot(data, aes(x = PVT, y = mean_biomass, fill = PVT)) +
# Bar graph with standard deviation error bars and total biomass label
ggplot(data, aes(x = PVT, y = mean_biomass, fill = PVT)) +
# Bar plot using mean biomass for each PVT
geom_col(alpha = 0.7) +
# Add standard deviation error bars using the newly added columns
geom_errorbar(aes(ymin = mean_biomass - sd_biomass, ymax = mean_biomass + sd_biomass),
width = 0.2, color = "black") +
# Add a label for total biomass (sum of SuitableBiomass for each PVT)
geom_text(data = data %>%
group_by(PVT) %>%
summarise(total_biomass = sum(SuitableBiomass, na.rm = TRUE)) %>%
ungroup()
labs(title = "Suitable Biomass by PVT",
# Bar graph with standard deviation error bars and total biomass label
ggplot(data, aes(x = PVT, y = mean_biomass, fill = PVT)) +
# Bar plot using mean biomass for each PVT
geom_col(alpha = 0.7) +
# Add standard deviation error bars using the newly added columns
geom_errorbar(aes(ymin = mean_biomass - sd_biomass, ymax = mean_biomass + sd_biomass),
width = 0.2, color = "black") +
# Add a label for total biomass (sum of SuitableBiomass for each PVT)
geom_text(data = data %>%
group_by(PVT) %>%
summarise(total_biomass = sum(SuitableBiomass, na.rm = TRUE)) %>%
ungroup())
library(tidyverse)
library(lubridate)
library(sf)
setwd("C:/Users/Alexis Means/Documents/Project/Nutrition Sampling/R code/FRESH/processed.data/")
totals <- read.csv("test.totals.csv")
fdata <- read.csv("test.fdata.csv")
transect <- read.csv("../raw.data/transect.csv")
#formatting plot database
plot <- transect %>%
rename(TransectID = PlotID,
Lat = BeginLat,
Long = BeginLong) %>%
select(Dates, TransectID, PVT, Lat, Long)
plot <- plot %>%
mutate(Dates = mdy(Dates),
JulianDay = yday(Dates)) %>%
st_as_sf(coords = c("Long", "Lat"), crs = 4326) %>%
st_transform(crs = 32611) %>%
mutate(Easting = st_coordinates(.)[,1],
Northing = st_coordinates(.)[,2]) %>%
select(JulianDay, TransectID, PVT, Easting, Northing) %>%
st_drop_geometry()
#formatting fdata
fdata <- fdata %>%
select(-Max, -DE.SD, -DP.SD, -Pct_Used, -SuitableBiomass)
#combine all the databases
data <- plot %>%
left_join(y = totals,
by = "TransectID") %>%
left_join(y = fdata,
by = "TransectID",
relationship = "one-to-many")
#I hate the way it is arranged, so I am going to rearrange it
data <- data %>%
select(JulianDay, PVT, TransectID, Plant.Code, Phenology, Part, Biomass, Biomass_Used, Pct_Suitable_Biomass, SuitableBiomass, DE, TotalDE, AveDE, DP, TotalDP, AveDP, Easting, Northing)
#recategorize PVT
data <- data %>%
mutate(PVT = recode(PVT,
`672` = "Grassland",
`668` = "Scabland",
`669` = "Sagebrush Shrubland",
`674` = "Sagebrush Steppe",
`682` = "Riparian"))
rm(fdata, plot, totals, transect)
# Add mean_biomass and sd_biomass to the data dataframe
data <- data %>%
group_by(PVT) %>%
mutate(
# Min-Max normalization
normalized_biomass = (SuitableBiomass - min(SuitableBiomass, na.rm = TRUE)) /
(max(SuitableBiomass, na.rm = TRUE) - min(SuitableBiomass, na.rm = TRUE)),
mean_biomass = mean(SuitableBiomass, na.rm = TRUE),
sd_biomass = sd(SuitableBiomass, na.rm = TRUE)
) %>%
ungroup()  # Remove grouping after mutation
# Bar graph with normalized biomass, error bars, and total biomass label
ggplot(data, aes(x = PVT, y = normalized_biomass, fill = PVT)) +
# Bar plot using normalized biomass for each PVT
geom_col(alpha = 0.7) +
# Add standard deviation error bars using the newly added columns
geom_errorbar(aes(ymin = normalized_biomass - sd_biomass, ymax = normalized_biomass + sd_biomass),
width = 0.2, color = "black") +
# Add a label for total biomass (sum of SuitableBiomass for each PVT)
geom_text(data = data %>%
group_by(PVT) %>%
summarise(total_biomass = sum(SuitableBiomass, na.rm = TRUE)) %>%
ungroup(),
aes(x = PVT, y = 0, label = paste("Total Biomass:", round(total_biomass, 2))),
color = "red", vjust = -1.5) +  # Position the label below the bars
labs(title = "Normalized Suitable Biomass by PVT",
x = "PVT",
y = "Normalized Suitable Biomass") +
theme_minimal() +
theme(legend.position = "none")
library(tidyverse)
library(lubridate)
library(sf)
setwd("C:/Users/Alexis Means/Documents/Project/Nutrition Sampling/R code/FRESH/processed.data/")
totals <- read.csv("test.totals.csv")
fdata <- read.csv("test.fdata.csv")
transect <- read.csv("../raw.data/transect.csv")
#formatting plot database
plot <- transect %>%
rename(TransectID = PlotID,
Lat = BeginLat,
Long = BeginLong) %>%
select(Dates, TransectID, PVT, Lat, Long)
plot <- plot %>%
mutate(Dates = mdy(Dates),
JulianDay = yday(Dates)) %>%
st_as_sf(coords = c("Long", "Lat"), crs = 4326) %>%
st_transform(crs = 32611) %>%
mutate(Easting = st_coordinates(.)[,1],
Northing = st_coordinates(.)[,2]) %>%
select(JulianDay, TransectID, PVT, Easting, Northing) %>%
st_drop_geometry()
#formatting fdata
fdata <- fdata %>%
select(-Max, -DE.SD, -DP.SD, -Pct_Used, -SuitableBiomass)
#combine all the databases
data <- plot %>%
left_join(y = totals,
by = "TransectID") %>%
left_join(y = fdata,
by = "TransectID",
relationship = "one-to-many")
#I hate the way it is arranged, so I am going to rearrange it
data <- data %>%
select(JulianDay, PVT, TransectID, Plant.Code, Phenology, Part, Biomass, Biomass_Used, Pct_Suitable_Biomass, SuitableBiomass, DE, TotalDE, AveDE, DP, TotalDP, AveDP, Easting, Northing)
#recategorize PVT
data <- data %>%
mutate(PVT = recode(PVT,
`672` = "Grassland",
`668` = "Scabland",
`669` = "Sagebrush Shrubland",
`674` = "Sagebrush Steppe",
`682` = "Riparian"))
rm(fdata, plot, totals, transect)
# Log transformation of biomass values (add a small constant if there are zeros)
logdata <- data %>%
mutate(
log_biomass = log(SuitableBiomass + 1)  # Adding 1 to handle zero biomass values
)
# Bar graph with log-transformed biomass
ggplot(logdata, aes(x = PVT, y = log_biomass, fill = PVT)) +
geom_col(alpha = 0.7) +
# Add error bars based on log-transformed biomass
geom_errorbar(aes(ymin = log_biomass - log(sd(SuitableBiomass) + 1),
ymax = log_biomass + log(sd(SuitableBiomass) + 1)),
width = 0.2, color = "black") +
labs(title = "Log-transformed Suitable Biomass by PVT",
x = "PVT",
y = "Log-transformed Suitable Biomass") +
theme_minimal() +
theme(legend.position = "none")
# Standardize across all PVTs, making the biomass values comparable
standarddata <- data %>%
mutate(
# Standardize the biomass values across all PVTs
standardized_biomass = (SuitableBiomass - mean(SuitableBiomass, na.rm = TRUE)) /
sd(SuitableBiomass, na.rm = TRUE)
)
# Bar graph with standardized biomass and error bars
ggplot(standarddata, aes(x = PVT, y = standardized_biomass, fill = PVT)) +
geom_col(alpha = 0.7) +
# Add standard deviation error bars
geom_errorbar(aes(ymin = standardized_biomass - sd(SuitableBiomass, na.rm = TRUE),
ymax = standardized_biomass + sd(SuitableBiomass, na.rm = TRUE)),
width = 0.2, color = "black") +
labs(title = "Standardized Suitable Biomass by PVT",
x = "PVT",
y = "Standardized Suitable Biomass") +
theme_minimal() +
theme(legend.position = "none")
# Calculate the percent of biomass relative to each PVT's total biomass
percentdata <- data %>%
group_by(PVT) %>%
mutate(
total_biomass = sum(SuitableBiomass, na.rm = TRUE),  # Total biomass in each PVT
percent_biomass = SuitableBiomass / total_biomass * 100  # Percent biomass relative to total biomass in PVT
) %>%
ungroup()
# Bar graph with percent biomass and error bars
ggplot(percentdata, aes(x = PVT, y = percent_biomass, fill = PVT)) +
geom_col(alpha = 0.7) +
# Add error bars based on percent biomass
geom_errorbar(aes(ymin = percent_biomass - (sd(SuitableBiomass) / total_biomass * 100),
ymax = percent_biomass + (sd(SuitableBiomass) / total_biomass * 100)),
width = 0.2, color = "black") +
labs(title = "Percent Biomass Relative to Total Biomass by PVT",
x = "PVT",
y = "Percent Biomass") +
theme_minimal() +
theme(legend.position = "none")
# Create the stacked bar chart
ggplot(percentdata, aes(x = PVT, y = percent_biomass, fill = PVT)) +
# Bar plot
geom_bar(stat = "identity", position = "stack") +
labs(title = "Percent Biomass Relative to Total Biomass by PVT",
x = "PVT",
y = "Percent Biomass") +
theme_minimal() +
theme(legend.position = "none")
# Dot plot with jitter
ggplot(data, aes(x = PVT, y = percent_biomass)) +
geom_jitter(aes(color = PVT), width = 0.1, height = 0) +  # Jitter for individual points
labs(title = "Distribution of Percent Biomass Relative to Total Biomass by PVT",
x = "PVT",
y = "Percent Biomass") +
theme_minimal()
# Dot plot with jitter
ggplot(percentdata, aes(x = PVT, y = percent_biomass)) +
geom_jitter(aes(color = PVT), width = 0.1, height = 0) +  # Jitter for individual points
labs(title = "Distribution of Percent Biomass Relative to Total Biomass by PVT",
x = "PVT",
y = "Percent Biomass") +
theme_minimal()
# Boxplot for percent biomass
ggplot(percentdata, aes(x = PVT, y = percent_biomass, fill = PVT)) +
geom_boxplot() +
labs(title = "Percent Biomass Relative to Total Biomass by PVT",
x = "PVT",
y = "Percent Biomass") +
theme_minimal() +
theme(legend.position = "none")
# Boxplot for percent biomass
ggplot(percentdata, aes(x = PVT, y = percent_biomass, fill = PVT)) +
geom_boxplot() +
labs(title = "% Suitable Biomass Relative to Total Suitable Biomass by PVT",
x = "PVT",
y = "Percent Suitable Biomass") +
theme_minimal() +
theme(legend.position = "none")
DE_summary <- data %>%
group_by(PVT)
DE_summary
ggplot(DE_summary, aes(x = PVT, y = AveDE, fill = PVT)) +
geom_boxplot() +
labs(title = "% Suitable Biomass Relative to Total Suitable Biomass by PVT",
x = "PVT",
y = "AveDE per PVT") +
theme_minimal() +
theme(legend.position = "none")
ggplot(DE_summary, aes(x = PVT, y = AveDE, fill = AveDE)) +
geom_boxplot() +
labs(title = "% Suitable Biomass Relative to Total Suitable Biomass by PVT",
x = "PVT",
y = "AveDE per PVT") +
theme_minimal() +
theme(legend.position = "none")
DE_summary$PVT <- as.factor(DE_summary$PVT)
# Create the boxplot
ggplot(DE_summary, aes(x = PVT, y = AveDE, fill = PVT)) +
geom_boxplot() +
labs(title = "% Suitable Biomass Relative to Total Suitable Biomass by PVT",
x = "PVT",
y = "AveDE per PVT") +
theme_minimal() +
theme(legend.position = "none")
# Summarize the data by PVT, calculating the summary statistics (if needed)
DE_summary <- data %>%
group_by(PVT) %>%
summarise(AveDE = mean(AveDE, na.rm = TRUE))
# Ensure PVT is a factor
DE_summary$PVT <- as.factor(DE_summary$PVT)
# Summarize the data by PVT, calculating the summary statistics (if needed)
DE_summary <- data %>%
group_by(PVT) %>%
DE_summary$AveDE <- as.factor(DE_summary$AveDE) %>%
summarise(AveDE = mean(AveDE, na.rm = TRUE))
# Summarize the data by PVT, calculating the summary statistics (if needed)
DE_summary <- data %>%
group_by(PVT) %>%
summarise(AveDE = mean(AveDE, na.rm = TRUE))
# Ensure PVT is a factor
DE_summary$PVT <- as.factor(DE_summary$PVT)
DE_summary$AveDE <- as.factor(DE_summary$AveDE)
# Create the boxplot
ggplot(data, aes(x = PVT, y = SuitableBiomass, fill = PVT)) +
geom_boxplot() +
labs(title = "% Suitable Biomass Relative to Total Suitable Biomass by PVT",
x = "PVT",
y = "Suitable Biomass per PVT") +
theme_minimal() +
theme(legend.position = "none")
# Create the boxplot
ggplot(DE_summary, aes(x = PVT, y = AveDE, fill = PVT)) +
geom_boxplot() +
labs(title = "% Suitable Biomass Relative to Total Suitable Biomass by PVT",
x = "PVT",
y = "Suitable Biomass per PVT") +
theme_minimal() +
theme(legend.position = "none")
DE_summary
