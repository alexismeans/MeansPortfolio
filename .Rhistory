# Clean up any leading/trailing whitespace and convert to character
data_clean <- data %>%
mutate(
Code = str_trim(as.character(Code)),
Phenology = str_trim(as.character(Phenology)),
Part = str_trim(as.character(Part))
)
# Step 1: Calculate mean DE and organize data
top_20_combos <- data_clean %>%
group_by(Code, Phenology, Part) %>%
summarise(mean_DE = mean(DE, na.rm = TRUE), .groups = "drop") %>%
arrange(desc(mean_DE)) %>%
slice_head(n = 20) %>%
mutate(combo_label = paste(Code, Phenology, Part, sep = "_"))%>%
mutate(combo_label = reorder(combo_label, -mean_DE))
top_20_combos <- top_20_combos %>%
left_join(
data %>%
select(Code, Phenology, Part, Status) %>%
distinct(),
by = c("Code", "Phenology", "Part")
) %>%
mutate(combo_label = paste(Code, Phenology, Part, sep = "_"),
combo_label = reorder(combo_label, -mean_DE))
##creating interavtive scatterplot
p1 <- ggplot(top_20_combos, aes(
x = combo_label,
y = mean_DE,
color = Status,
text = paste0(
"Code: ", Code,
"<br>Phenology: ", Phenology,
"<br>Part: ", Part,
"<br>Status: ", Status,
"<br>Mean DE: ", round(mean_DE, 2)
)
)) +
geom_point(size = 4) +
labs(
title = "Top 20 Species Combinations by Mean DE",
x = "Code | Phenology | Part",
y = "Mean DE",
color = "Status"
) +
theme_minimal(base_size = 12) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplotly(p1, tooltip = "text")
#| warning: FALSE
library(tidyverse)
#make sure that the phenological stages are seen as categorical variables and in the correct order
data$Phenology <- factor(data$Phenology, levels = c("N", "B", "FL", "FR", "M", "C"))
library(dplyr)
library(stringr)
library(plotly)
# Clean up any leading/trailing whitespace and convert to character
data_clean <- data %>%
mutate(
Code = str_trim(as.character(Code)),
Phenology = str_trim(as.character(Phenology)),
Part = str_trim(as.character(Part))
)
# Step 1: Calculate mean DE and organize data
top_20_combos <- data_clean %>%
group_by(Code, Phenology, Part) %>%
summarise(mean_DE = mean(DE, na.rm = TRUE), .groups = "drop") %>%
arrange(desc(mean_DE)) %>%
slice_head(n = 20) %>%
mutate(combo_label = paste(Code, Phenology, Part, sep = "_"))%>%
mutate(combo_label = reorder(combo_label, -mean_DE))
top_20_combos <- top_20_combos %>%
left_join(
data %>%
select(Code, Phenology, Part, Status) %>%
distinct(),
by = c("Code", "Phenology", "Part")
) %>%
mutate(combo_label = paste(Code, Phenology, Part, sep = "_"),
combo_label = reorder(combo_label, -mean_DE))
##creating interavtive scatterplot
p1 <- ggplot(top_20_combos, aes(
x = combo_label,
y = mean_DE,
color = Status,
text = paste0(
"Code: ", Code,
"<br>Phenology: ", Phenology,
"<br>Part: ", Part,
"<br>Status: ", Status,
"<br>Mean DE: ", round(mean_DE, 2)
)
)) +
geom_point(size = 4) +
labs(
title = "Top 20 Species Combinations by Mean DE",
x = "Code | Phenology | Part",
y = "Mean DE",
color = "Status"
) +
theme_minimal(base_size = 12) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplotly(p1, tooltip = "text")
#| warning: FALSE
# Step 2: Filter the dataset to only include those top 20 combinations
filtered_DE <- data_clean %>%
semi_join(top_20_combos, by = c("Code", "Phenology", "Part"))
# Count number of observations per Code–Phenology–Part combo
combo_counts <- filtered_DE %>%
count(Code, Phenology, Part, name = "obs_count") %>%
left_join(
data %>%
select(Code, Phenology, Part, Status) %>%
distinct(),
by = c("Code", "Phenology", "Part")
) %>%
mutate(combo_label = paste(Code, Phenology, Part, sep = "_"),
combo_label = reorder(combo_label, obs_count))
p2 <- ggplot(combo_counts, aes(
x = combo_label,
y = obs_count,
fill = Status,
text = paste0(
"Code: ", Code,
"<br>Phenology: ", Phenology,
"<br>Part: ", Part,
"<br>Status: ", Status,
"<br>Observations: ", obs_count
)
)) +
geom_col() +
coord_flip() +
labs(
title = "Observation Frequency of Top 20 Species Combos",
x = "Code | Phenology | Part",
y = "Number of Observations",
fill = "Status"
) +
theme_minimal(base_size = 12)
ggplotly(p2, tooltip = "text")
# Step 1: Calculate mean DE and organize data
top_20_DP <- data_clean %>%
group_by(Code, Phenology, Part) %>%
summarise(mean_DP = mean(DP, na.rm = TRUE), .groups = "drop") %>%
arrange(desc(mean_DP)) %>%
slice_head(n = 20) %>%
mutate(combo_label = paste(Code, Phenology, Part, sep = "_"))%>%
mutate(combo_label = reorder(combo_label, -mean_DE))
top_20_DP <- top_20_DP %>%
left_join(
data %>%
select(Code, Phenology, Part, Status) %>%
distinct(),
by = c("Code", "Phenology", "Part")
) %>%
mutate(combo_label = paste(Code, Phenology, Part, sep = "_"),
combo_label = reorder(combo_label, -mean_DP))
# Step 1: Calculate mean DE and organize data
top_20_DP <- data_clean %>%
group_by(Code, Phenology, Part) %>%
summarise(mean_DP = mean(DP, na.rm = TRUE), .groups = "drop") %>%
arrange(desc(mean_DP)) %>%
slice_head(n = 20) %>%
mutate(combo_label = paste(Code, Phenology, Part, sep = "_"))%>%
mutate(combo_label = reorder(combo_label, -mean_DE))
# Step 1: Calculate mean DE and organize data
top_20_DP <- data_clean %>%
group_by(Code, Phenology, Part) %>%
summarise(mean_DP = mean(DP, na.rm = TRUE), .groups = "drop") %>%
arrange(desc(mean_DP)) %>%
slice_head(n = 20) %>%
mutate(combo_label = paste(Code, Phenology, Part, sep = "_"))%>%
mutate(combo_label = reorder(combo_label, -mean_DP))
top_20_DP <- top_20_DP %>%
left_join(
data %>%
select(Code, Phenology, Part, Status) %>%
distinct(),
by = c("Code", "Phenology", "Part")
) %>%
mutate(combo_label = paste(Code, Phenology, Part, sep = "_"),
combo_label = reorder(combo_label, -mean_DP))
##creating interavtive scatterplot
p3 <- ggplot(top_20_DP, aes(
x = combo_label,
y = mean_DP,
color = Status,
text = paste0(
"Code: ", Code,
"<br>Phenology: ", Phenology,
"<br>Part: ", Part,
"<br>Status: ", Status,
"<br>Mean DE: ", round(mean_DP, 2)
)
)) +
geom_point(size = 4) +
labs(
title = "Top 20 Species Combinations by Mean DP",
x = "Code | Phenology | Part",
y = "Mean DP",
color = "Status"
) +
theme_minimal(base_size = 12) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplotly(p3, tooltip = "text")
#| warning: FALSE
# Step 2: Filter the dataset to only include those top 20 combinations
filtered_DP <- data_clean %>%
semi_join(top_20_DP, by = c("Code", "Phenology", "Part"))
# Count number of observations per Code–Phenology–Part combo
DP_counts <- filtered_DP %>%
count(Code, Phenology, Part, name = "obs_count") %>%
left_join(
data %>%
select(Code, Phenology, Part, Status) %>%
distinct(),
by = c("Code", "Phenology", "Part")
) %>%
mutate(combo_label = paste(Code, Phenology, Part, sep = "_"),
combo_label = reorder(combo_label, obs_count))
p4 <- ggplot(DP_counts, aes(
x = combo_label,
y = obs_count,
fill = Status,
text = paste0(
"Code: ", Code,
"<br>Phenology: ", Phenology,
"<br>Part: ", Part,
"<br>Status: ", Status,
"<br>Observations: ", obs_count
)
)) +
geom_col() +
coord_flip() +
labs(
title = "Observation Frequency of Top 20 Species Combos",
x = "Code | Phenology | Part",
y = "Number of Observations",
fill = "Status"
) +
theme_minimal(base_size = 12)
ggplotly(p4, tooltip = "text")
View(filtered_DE)
biomass_DE <- data_clean %>%
group_by(Code, Phenology, Part)
View(biomass_DE)
View(top_20_combos)
biomass_DE <- data %>%
group_by(Code, Phenology, Part) %>%
left_join(
data %>%
select(Code, Phenology, Part, Status, Biomass) %>%
distinct(),
by = c("Code", "Phenology", "Part")
) %>%
mutate(combo_label = paste(Code, Phenology, Part, sep = "_"),
combo_label = reorder(combo_label, -mean_DE))
biomass_DE <- data %>%
group_by(Code, Phenology, Part) %>%
left_join(
data %>%
select(Code, Phenology, Part, Status, Biomass) %>%
distinct(),
by = c("Code", "Phenology", "Part")
) %>%
mutate(combo_label = paste(Code, Phenology, Part, sep = "_"))
biomass_DE
grass <- data %>%
filter(Family == "POACEAE")
grass
View(grass)
grass.DE <- data %>%
filter(Family == "POACEAE") %>%
group_by(Code, Phenology, Part) %>%
summarise(mean_DE = mean(DE, na.rm = TRUE), .groups = "drop") %>%
arrange(desc(mean_DE)) %>%
slice_head(n = 20) %>%
left_join(
data %>%
select(Code, Phenology, Part, Status) %>%
distinct(),
by = c("Code", "Phenology", "Part")
) %>%
mutate(combo_label = paste(Code, Phenology, Part, sep = "_"),
combo_label = reorder(combo_label, -mean_DE))
View(grass.DE)
##creating interavtive scatterplot
p5 <- ggplot(grass.DE, aes(
x = combo_label,
y = mean_DE,
color = Status,
text = paste0(
"Code: ", Code,
"<br>Phenology: ", Phenology,
"<br>Part: ", Part,
"<br>Status: ", Status,
"<br>Mean DE: ", round(mean_DE, 2)
)
)) +
geom_point(size = 4) +
labs(
title = "Top 20 Grass Species by Mean DE",
x = "Code | Phenology | Part",
y = "Mean DE",
color = "Status"
) +
theme_minimal(base_size = 12) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplotly(p5, tooltip = "text")
filtered_grass.DE <- data %>%
semi_join(grass.DE, by = c("Code", "Phenology", "Part"))
# Count number of observations per Code–Phenology–Part combo
grass.DE_counts <- filtered_grass.DE %>%
count(Code, Phenology, Part, name = "obs_count") %>%
left_join(
data %>%
select(Code, Phenology, Part, Status) %>%
distinct(),
by = c("Code", "Phenology", "Part")
) %>%
mutate(combo_label = paste(Code, Phenology, Part, sep = "_"),
combo_label = reorder(combo_label, obs_count))
p6 <- ggplot(grass.DE_counts, aes(
x = combo_label,
y = obs_count,
fill = Status,
text = paste0(
"Code: ", Code,
"<br>Phenology: ", Phenology,
"<br>Part: ", Part,
"<br>Status: ", Status,
"<br>Observations: ", obs_count
)
)) +
geom_col() +
coord_flip() +
labs(
title = "Observation Frequency of Top 20 Species Combos",
x = "Code | Phenology | Part",
y = "Number of Observations",
fill = "Status"
) +
theme_minimal(base_size = 12)
ggplotly(p6, tooltip = "text")
grass.DP <- data %>%
filter(Family == "POACEAE") %>%
group_by(Code, Phenology, Part) %>%
summarise(mean_DE = mean(DE, na.rm = TRUE), .groups = "drop") %>%
arrange(desc(mean_DE)) %>%
slice_head(n = 20) %>%
left_join(
data %>%
select(Code, Phenology, Part, Status) %>%
distinct(),
by = c("Code", "Phenology", "Part")
) %>%
mutate(combo_label = paste(Code, Phenology, Part, sep = "_"),
combo_label = reorder(combo_label, -mean_DE))
##creating interavtive scatterplot
p7 <- ggplot(grass.DP, aes(
x = combo_label,
y = mean_DE,
color = Status,
text = paste0(
"Code: ", Code,
"<br>Phenology: ", Phenology,
"<br>Part: ", Part,
"<br>Status: ", Status,
"<br>Mean DE: ", round(mean_DE, 2)
)
)) +
geom_point(size = 4) +
labs(
title = "Top 20 Grass Species by Mean DE",
x = "Code | Phenology | Part",
y = "Mean DE",
color = "Status"
) +
theme_minimal(base_size = 12) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplotly(p7, tooltip = "text")
```{r}
grass.DP <- data %>%
filter(Family == "POACEAE") %>%
group_by(Code, Phenology, Part) %>%
summarise(mean_DP = mean(DP, na.rm = TRUE), .groups = "drop") %>%
arrange(desc(mean_DP)) %>%
slice_head(n = 20) %>%
left_join(
data %>%
select(Code, Phenology, Part, Status) %>%
distinct(),
by = c("Code", "Phenology", "Part")
) %>%
mutate(combo_label = paste(Code, Phenology, Part, sep = "_"),
combo_label = reorder(combo_label, -mean_DP))
##creating interavtive scatterplot
p7 <- ggplot(grass.DP, aes(
x = combo_label,
y = mean_DE,
color = Status,
text = paste0(
"Code: ", Code,
"<br>Phenology: ", Phenology,
"<br>Part: ", Part,
"<br>Status: ", Status,
"<br>Mean DE: ", round(mean_DE, 2)
)
)) +
geom_point(size = 4) +
labs(
title = "Top 20 Grass Species by Mean DE",
x = "Code | Phenology | Part",
y = "Mean DE",
color = "Status"
) +
theme_minimal(base_size = 12) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplotly(p7, tooltip = "text")
##creating interavtive scatterplot
p7 <- ggplot(grass.DP, aes(
x = combo_label,
y = mean_DE,
color = Status,
text = paste0(
"Code: ", Code,
"<br>Phenology: ", Phenology,
"<br>Part: ", Part,
"<br>Status: ", Status,
"<br>Mean DE: ", round(mean_DP, 2)
)
)) +
geom_point(size = 4) +
labs(
title = "Top 20 Grass Species by Mean DE",
x = "Code | Phenology | Part",
y = "Mean DE",
color = "Status"
) +
theme_minimal(base_size = 12) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplotly(p7, tooltip = "text")
grass.DP <- data %>%
filter(Family == "POACEAE") %>%
group_by(Code, Phenology, Part) %>%
summarise(mean_DP = mean(DP, na.rm = TRUE), .groups = "drop") %>%
arrange(desc(mean_DP)) %>%
slice_head(n = 20) %>%
left_join(
data %>%
select(Code, Phenology, Part, Status) %>%
distinct(),
by = c("Code", "Phenology", "Part")
) %>%
mutate(combo_label = paste(Code, Phenology, Part, sep = "_"),
combo_label = reorder(combo_label, -mean_DP))
##creating interavtive scatterplot
p7 <- ggplot(grass.DP, aes(
x = combo_label,
y = mean_DP,
color = Status,
text = paste0(
"Code: ", Code,
"<br>Phenology: ", Phenology,
"<br>Part: ", Part,
"<br>Status: ", Status,
"<br>Mean DP: ", round(mean_DP, 2)
)
)) +
geom_point(size = 4) +
labs(
title = "Top 20 Grass Species by Mean DP",
x = "Code | Phenology | Part",
y = "Mean DP",
color = "Status"
) +
theme_minimal(base_size = 12) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplotly(p7, tooltip = "text")
filtered_grass.DP <- data %>%
semi_join(grass.DP, by = c("Code", "Phenology", "Part"))
# Count number of observations per Code–Phenology–Part combo
grass.DP_counts <- filtered_grass.DP %>%
count(Code, Phenology, Part, name = "obs_count") %>%
left_join(
data %>%
select(Code, Phenology, Part, Status) %>%
distinct(),
by = c("Code", "Phenology", "Part")
) %>%
mutate(combo_label = paste(Code, Phenology, Part, sep = "_"),
combo_label = reorder(combo_label, obs_count))
p8 <- ggplot(grass.DP_counts, aes(
x = combo_label,
y = obs_count,
fill = Status,
text = paste0(
"Code: ", Code,
"<br>Phenology: ", Phenology,
"<br>Part: ", Part,
"<br>Status: ", Status,
"<br>Observations: ", obs_count
)
)) +
geom_col() +
coord_flip() +
labs(
title = "Observation Frequency of Top 20 Grass Species",
x = "Code | Phenology | Part",
y = "Number of Observations",
fill = "Status"
) +
theme_minimal(base_size = 12)
ggplotly(p8, tooltip = "text")
